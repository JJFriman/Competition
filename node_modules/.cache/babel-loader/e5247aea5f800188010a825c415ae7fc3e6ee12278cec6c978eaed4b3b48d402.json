{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompetitionFetch from './CompetitionFetch';\nimport '../css/CompetitionAlkuerä.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [groupedTeams, setGroupedTeams] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection when the component mounts\n    const newSocket = new WebSocket('ws://localhost:8000');\n\n    // Handle page navigation or component unmount\n    window.addEventListener('beforeunload', () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    });\n\n    // Rest of your code\n\n    return () => {\n      // Clean up event listener when the component unmounts\n      window.removeEventListener('beforeunload', () => {\n        if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n          newSocket.close();\n        }\n      });\n    };\n  }, []);\n  const handleDataFetched = data => {\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\n    const first36Teams = sortedTeams.slice(0, 36);\n    setTeams(first36Teams);\n    divideTeamsIntoGroups(first36Teams);\n  };\n  const divideTeamsIntoGroups = teams => {\n    const grouped = [];\n    for (let i = 0; i < teams.length; i += 6) {\n      grouped.push(teams.slice(i, i + 6));\n    }\n    setGroupedTeams(grouped);\n  };\n  const handleGroupSelection = selectedGroupIndex => {\n    setSelectedGroup(selectedGroupIndex);\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const selectedGroupData = groupedTeams[selectedGroupIndex];\n      socket.send(JSON.stringify(selectedGroupData));\n      console.log('Data sent from CompetitionAlkuerä:', selectedGroupData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: groupedTeams.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Alkuer\\xE4 \", groupIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGroupSelection(groupIndex),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), group.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: team.joukkue_nimi\n        }, team.joukkue_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))]\n      }, groupIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompetitionFetch, {\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"pT5PrPqm7EoE9zFQ2OM6T5ZeaXk=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","CompetitionFetch","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","teams","setTeams","groupedTeams","setGroupedTeams","selectedGroup","setSelectedGroup","socket","setSocket","newSocket","WebSocket","window","addEventListener","readyState","OPEN","close","removeEventListener","handleDataFetched","data","sortedTeams","sort","a","b","osallistumis_nro","first36Teams","slice","divideTeamsIntoGroups","grouped","i","length","push","handleGroupSelection","selectedGroupIndex","selectedGroupData","send","JSON","stringify","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","group","groupIndex","onClick","team","joukkue_nimi","joukkue_id","onDataFetched","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CompetitionFetch from './CompetitionFetch';\r\nimport '../css/CompetitionAlkuerä.css';\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [groupedTeams, setGroupedTeams] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\nuseEffect(() => {\r\n  // Initialize the WebSocket connection when the component mounts\r\n  const newSocket = new WebSocket('ws://localhost:8000');\r\n\r\n  // Handle page navigation or component unmount\r\n  window.addEventListener('beforeunload', () => {\r\n    if (newSocket && newSocket.readyState === WebSocket.OPEN) {\r\n      newSocket.close();\r\n    }\r\n  });\r\n\r\n  // Rest of your code\r\n\r\n  return () => {\r\n    // Clean up event listener when the component unmounts\r\n    window.removeEventListener('beforeunload', () => {\r\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\r\n        newSocket.close();\r\n      }\r\n    });\r\n  };\r\n}, []);\r\n\r\n\r\n  const handleDataFetched = (data) => {\r\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\r\n    const first36Teams = sortedTeams.slice(0, 36);\r\n    setTeams(first36Teams);\r\n    divideTeamsIntoGroups(first36Teams);\r\n  };\r\n\r\n  const divideTeamsIntoGroups = (teams) => {\r\n    const grouped = [];\r\n    for (let i = 0; i < teams.length; i += 6) {\r\n      grouped.push(teams.slice(i, i + 6));\r\n    }\r\n    setGroupedTeams(grouped);\r\n  };\r\n\r\n  const handleGroupSelection = (selectedGroupIndex) => {\r\n    setSelectedGroup(selectedGroupIndex);\r\n  \r\n    if (socket && socket.readyState === WebSocket.OPEN) {\r\n      const selectedGroupData = groupedTeams[selectedGroupIndex];\r\n      socket.send(JSON.stringify(selectedGroupData));\r\n  \r\n      console.log('Data sent from CompetitionAlkuerä:', selectedGroupData);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition Alkuerä</h1>\r\n      <div className=\"groups-container\">\r\n        {groupedTeams.map((group, groupIndex) => (\r\n          <div key={groupIndex} className=\"group\">\r\n            <h2>Alkuerä {groupIndex + 1}</h2>\r\n            <button onClick={() => handleGroupSelection(groupIndex)}>Select</button>\r\n            {group.map((team) => (\r\n              <div key={team.joukkue_id} className=\"team\">\r\n                {team.joukkue_nimi}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CompetitionFetch onDataFetched={handleDataFetched} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,SAAS,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEtD;IACAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAE,MAAM;MAC5C,IAAIH,SAAS,IAAIA,SAAS,CAACI,UAAU,KAAKH,SAAS,CAACI,IAAI,EAAE;QACxDL,SAAS,CAACM,KAAK,CAAC,CAAC;MACnB;IACF,CAAC,CAAC;;IAEF;;IAEA,OAAO,MAAM;MACX;MACAJ,MAAM,CAACK,mBAAmB,CAAC,cAAc,EAAE,MAAM;QAC/C,IAAIP,SAAS,IAAIA,SAAS,CAACI,UAAU,KAAKH,SAAS,CAACI,IAAI,EAAE;UACxDL,SAAS,CAACM,KAAK,CAAC,CAAC;QACnB;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAME,iBAAiB,GAAIC,IAAI,IAAK;IAClC,MAAMC,WAAW,GAAG,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,gBAAgB,GAAGD,CAAC,CAACC,gBAAgB,CAAC;IACrF,MAAMC,YAAY,GAAGL,WAAW,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC7CvB,QAAQ,CAACsB,YAAY,CAAC;IACtBE,qBAAqB,CAACF,YAAY,CAAC;EACrC,CAAC;EAED,MAAME,qBAAqB,GAAIzB,KAAK,IAAK;IACvC,MAAM0B,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,KAAK,CAAC4B,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACxCD,OAAO,CAACG,IAAI,CAAC7B,KAAK,CAACwB,KAAK,CAACG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC;IACAxB,eAAe,CAACuB,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMI,oBAAoB,GAAIC,kBAAkB,IAAK;IACnD1B,gBAAgB,CAAC0B,kBAAkB,CAAC;IAEpC,IAAIzB,MAAM,IAAIA,MAAM,CAACM,UAAU,KAAKH,SAAS,CAACI,IAAI,EAAE;MAClD,MAAMmB,iBAAiB,GAAG9B,YAAY,CAAC6B,kBAAkB,CAAC;MAC1DzB,MAAM,CAAC2B,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,iBAAiB,CAAC,CAAC;MAE9CI,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEL,iBAAiB,CAAC;IACtE;EACF,CAAC;EAID,oBACEnC,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B7C,OAAA;MAAK8C,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAC9BpC,YAAY,CAAC0C,GAAG,CAAC,CAACC,KAAK,EAAEC,UAAU,kBAClCjD,OAAA;QAAsB8C,SAAS,EAAC,OAAO;QAAAL,QAAA,gBACrCzC,OAAA;UAAAyC,QAAA,GAAI,aAAQ,EAACQ,UAAU,GAAG,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjC7C,OAAA;UAAQkD,OAAO,EAAEA,CAAA,KAAMjB,oBAAoB,CAACgB,UAAU,CAAE;UAAAR,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvEG,KAAK,CAACD,GAAG,CAAEI,IAAI,iBACdnD,OAAA;UAA2B8C,SAAS,EAAC,MAAM;UAAAL,QAAA,EACxCU,IAAI,CAACC;QAAY,GADVD,IAAI,CAACE,UAAU;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACN,CAAC;MAAA,GAPMI,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7C,OAAA,CAACF,gBAAgB;MAACwD,aAAa,EAAEnC;IAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAAC3C,EAAA,CA7EQD,kBAAkB;AAAAsD,EAAA,GAAlBtD,kBAAkB;AA+E3B,eAAeA,kBAAkB;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}