{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\NewAjastinGranChild.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewAjastinGranChild = () => {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    setSocket(newSocket);\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  const handleLapClick = task => {\n    if (socket) {\n      const teamName = getTeamName(teamId);\n      socket.emit('lapTimer', {\n        teamId,\n        teamName,\n        taskName: task.tehtävä_nimi\n      });\n    }\n  };\n  const getTeamName = teamId => {\n    const team = selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.teams.find(team => team.joukkue_id === parseInt(teamId));\n    return team ? team.joukkue_nimi : 'Unknown Team';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `${getTeamName(teamId)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Teht\\xE4v\\xE4: \", task.tehtävä_nimi]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Max Time: \", task.max_aika]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLapClick(task),\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, task.tehtävä_nimi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(NewAjastinGranChild, \"RRFl5cq5dlO1oGquxO/0ypv+9V8=\", false, function () {\n  return [useParams];\n});\n_c = NewAjastinGranChild;\nexport default NewAjastinGranChild;\nvar _c;\n$RefreshReg$(_c, \"NewAjastinGranChild\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","NewAjastinGranChild","_s","teamId","selectedGroup","setSelectedGroup","socket","setSocket","document","title","newSocket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","handleLapClick","task","teamName","getTeamName","emit","taskName","tehtävä_nimi","team","teams","find","joukkue_id","parseInt","joukkue_nimi","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTasks","map","max_aika","onClick","_c","$RefreshReg$"],"sources":["C:/xampp2/htdocs/kilpailu/src/Components/NewAjastinGranChild.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst NewAjastinGranChild = () => {\r\n  const { teamId } = useParams();\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      if (newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  const handleLapClick = (task) => {\r\n    if (socket) {\r\n      const teamName = getTeamName(teamId);\r\n  \r\n      socket.emit('lapTimer', {\r\n        teamId,\r\n        teamName,\r\n        taskName: task.tehtävä_nimi,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  const getTeamName = (teamId) => {\r\n    const team = selectedGroup?.teams.find((team) => team.joukkue_id === parseInt(teamId));\r\n    return team ? team.joukkue_nimi : 'Unknown Team';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`${getTeamName(teamId)}`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>Selected Tasks:</h3>\r\n          <ul>\r\n            {selectedGroup.selectedTasks.map((task) => (\r\n              <li key={task.tehtävä_nimi}>\r\n                <div>\r\n                  <p>Tehtävä: {task.tehtävä_nimi}</p>\r\n                  <p>Max Time: {task.max_aika}</p>\r\n                  <button onClick={() => handleLapClick(task)}>Stop</button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewAjastinGranChild;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}