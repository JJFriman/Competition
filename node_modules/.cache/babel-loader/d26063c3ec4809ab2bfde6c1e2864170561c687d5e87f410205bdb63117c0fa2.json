{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\AlkuEr\\xE4Lopetus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlkuEräLopetus = ({\n  eraName\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  useEffect(() => {\n    fetchTimes();\n  }, []);\n  const fetchTimes = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/aikataulu');\n      if (!response.ok) {\n        throw new Error('Failed to fetch times');\n      }\n      const data = await response.json();\n      setTimes(data);\n    } catch (error) {\n      console.error('Error fetching times:', error);\n    }\n  };\n  const combineTimesForTeam = teamId => {\n    const teamTimes = times.filter(time => time.joukkue_id === teamId);\n    const combinedTime = teamTimes.reduce((acc, time) => acc + time.aika, 0);\n    return combinedTime;\n  };\n  const handleLopetaClick = async () => {\n    try {\n      // Fetch and process times\n      // Combine times for each team\n      const combinedTimes = {};\n      times.forEach(time => {\n        const teamId = time.joukkue_id;\n        if (!combinedTimes[teamId]) {\n          combinedTimes[teamId] = 0;\n        }\n        combinedTimes[teamId] += time.aika;\n      });\n\n      // Determine winners and non-winners\n      const winners = Object.keys(combinedTimes).reduce((result, teamId) => {\n        const teamCombinedTime = combinedTimes[teamId];\n        const winner = findWinner(teamId, teamCombinedTime);\n        result[teamId] = winner;\n        return result;\n      }, {});\n\n      // Non-winners logic\n      const nonWinners = Object.keys(combinedTimes).filter(teamId => !winners[teamId]);\n      // Update non-winners or perform other actions as needed\n      // ...\n\n      console.log('Winners:', winners);\n      console.log('Non-winners:', nonWinners);\n    } catch (error) {\n      console.error('Error handling lopeta click:', error);\n    }\n  };\n  const findWinner = group => {\n    return group.reduce((winner, current) => {\n      return Number(current.aika) < Number(winner.aika) ? current : winner;\n    });\n  };\n  console.log(times);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLopetaClick,\n      children: \"Lopeta er\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AlkuEräLopetus, \"81bowZj0s+OEa3RiisSpRGrXe+U=\");\n_c = AlkuEräLopetus;\nexport default AlkuEräLopetus;\nvar _c;\n$RefreshReg$(_c, \"AlkuEr\\xE4Lopetus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AlkuEräLopetus","eraName","_s","times","setTimes","fetchTimes","response","fetch","ok","Error","data","json","error","console","combineTimesForTeam","teamId","teamTimes","filter","time","joukkue_id","combinedTime","reduce","acc","aika","handleLopetaClick","combinedTimes","forEach","winners","Object","keys","result","teamCombinedTime","winner","findWinner","nonWinners","log","group","current","Number","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/AlkuEräLopetus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AlkuEräLopetus = ({ eraName }) => {\r\n  const [times, setTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTimes();\r\n  }, []);\r\n\r\n  const fetchTimes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/aikataulu');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch times');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTimes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching times:', error);\r\n    }\r\n  };\r\n\r\n  const combineTimesForTeam = (teamId) => {\r\n    const teamTimes = times.filter((time) => time.joukkue_id === teamId);\r\n    const combinedTime = teamTimes.reduce((acc, time) => acc + time.aika, 0);\r\n    return combinedTime;\r\n  };\r\n\r\n  const handleLopetaClick = async () => {\r\n    try {\r\n      // Fetch and process times\r\n      // Combine times for each team\r\n      const combinedTimes = {};\r\n      times.forEach((time) => {\r\n        const teamId = time.joukkue_id;\r\n        if (!combinedTimes[teamId]) {\r\n          combinedTimes[teamId] = 0;\r\n        }\r\n        combinedTimes[teamId] += time.aika;\r\n      });\r\n\r\n      // Determine winners and non-winners\r\n      const winners = Object.keys(combinedTimes).reduce((result, teamId) => {\r\n        const teamCombinedTime = combinedTimes[teamId];\r\n        const winner = findWinner(teamId, teamCombinedTime);\r\n        result[teamId] = winner;\r\n        return result;\r\n      }, {});\r\n\r\n      // Non-winners logic\r\n      const nonWinners = Object.keys(combinedTimes).filter((teamId) => !winners[teamId]);\r\n      // Update non-winners or perform other actions as needed\r\n      // ...\r\n\r\n      console.log('Winners:', winners);\r\n      console.log('Non-winners:', nonWinners);\r\n    } catch (error) {\r\n      console.error('Error handling lopeta click:', error);\r\n    }\r\n  };\r\n  \r\n  const findWinner = (group) => {\r\n    return group.reduce((winner, current) => {\r\n      return Number(current.aika) < Number(winner.aika) ? current : winner;\r\n    });\r\n  };\r\n  \r\n  \r\n  \r\n  \r\nconsole.log(times)\r\n  return (\r\n    <div>\r\n      <button onClick={handleLopetaClick}>Lopeta erä</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlkuEräLopetus;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}