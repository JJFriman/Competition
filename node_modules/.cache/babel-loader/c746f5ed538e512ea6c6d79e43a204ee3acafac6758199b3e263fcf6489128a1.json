{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\TasksSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { sendSelectedTaskData } from './WebSocketUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksSelector({\n  onSelectTask\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState({});\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Initialize WebSocket connection\n    const newSocket = io('http://localhost:8000');\n    setSocket(newSocket);\n\n    // Cleanup function to disconnect socket when component unmounts\n    return () => {\n      if (newSocket && newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Fetch tasks from the API\n    axios.get('http://localhost:3001/api/tehtavat').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  }, []);\n  const handleTaskSelect = async task => {\n    console.log('Selected Task:', task);\n    if (task && task.id) {\n      const selectedTaskData = {\n        id: task.id,\n        tehtävä_nimi: task.tehtävä_nimi,\n        max_aika: task.max_aika\n      };\n      try {\n        await sendSelectedTaskData(selectedTaskData);\n        setSelectedTask(selectedTaskData);\n      } catch (error) {\n        console.error('Error sending selected task data:', error.message);\n      }\n    } else {\n      console.error('Invalid task object:', task);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTask ? selectedTask.id : '',\n      onChange: e => {\n        const taskId = e.target.value;\n        const selected = tasks.find(task => task.id === parseInt(taskId, 10));\n        if (selected) {\n          handleTaskSelect(selected);\n        } else {\n          console.error('Invalid task selected:', taskId);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"Select a task\"\n      }, \"default\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: task.id,\n        children: task.tehtävä_nimi\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksSelector, \"E5164rN7/8V0CyN6frubBHZeZCo=\");\n_c = TasksSelector;\nexport default TasksSelector;\nvar _c;\n$RefreshReg$(_c, \"TasksSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","sendSelectedTaskData","jsxDEV","_jsxDEV","TasksSelector","onSelectTask","_s","tasks","setTasks","selectedTask","setSelectedTask","socket","setSocket","newSocket","connected","disconnect","get","then","response","data","catch","error","console","handleTaskSelect","task","log","id","selectedTaskData","tehtävä_nimi","max_aika","message","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","taskId","target","selected","find","parseInt","map","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/TasksSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport { sendSelectedTaskData } from './WebSocketUtils';\r\n\r\nfunction TasksSelector({ onSelectTask }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState({});\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize WebSocket connection\r\n    const newSocket = io('http://localhost:8000');\r\n    setSocket(newSocket);\r\n\r\n    // Cleanup function to disconnect socket when component unmounts\r\n    return () => {\r\n      if (newSocket && newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks from the API\r\n    axios.get('http://localhost:3001/api/tehtavat')\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleTaskSelect = async (task) => {\r\n    console.log('Selected Task:', task);\r\n    if (task && task.id) {\r\n      const selectedTaskData = {\r\n        id: task.id,\r\n        tehtävä_nimi: task.tehtävä_nimi,\r\n        max_aika: task.max_aika,\r\n      };\r\n      \r\n      try {\r\n        await sendSelectedTaskData(selectedTaskData);\r\n        setSelectedTask(selectedTaskData);\r\n      } catch (error) {\r\n        console.error('Error sending selected task data:', error.message);\r\n      }\r\n    } else {\r\n      console.error('Invalid task object:', task);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Task Selector</h2>\r\n      <select\r\n        value={selectedTask ? selectedTask.id : ''}\r\n        onChange={(e) => {\r\n          const taskId = e.target.value;\r\n          const selected = tasks.find((task) => task.id === parseInt(taskId, 10));\r\n\r\n          if (selected) {\r\n            handleTaskSelect(selected);\r\n          } else {\r\n            console.error('Invalid task selected:', taskId);\r\n          }\r\n        }}\r\n      >\r\n        <option key=\"default\" value=\"0\">Select a task</option>\r\n        {tasks.map((task) => (\r\n          <option key={task.id} value={task.id}>\r\n            {task.tehtävä_nimi}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}