{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ker\\xE4ilyEr\\xE4Lopetus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeräilyEräLopetus = ({\n  eraName\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const [allWinners, setAllWinners] = useState([]);\n  const [remainingNonWinners, setRemainingNonWinners] = useState([]);\n  useEffect(() => {\n    fetchTimes();\n  }, []);\n  const fetchTimes = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/aikataulu');\n      if (!response.ok) {\n        throw new Error('Failed to fetch times');\n      }\n      const data = await response.json();\n\n      // Filter times based on whether era includes \"Keräilyera\"\n      const filteredTimes = data.filter(time => time.era.includes('Keräilyera'));\n      setTimes(filteredTimes);\n      conso;\n    } catch (error) {\n      console.error('Error fetching times:', error);\n    }\n  };\n  const calculateCombinedTimesByRound = () => {\n    const combinedTimesByRound = {};\n    times.forEach(time => {\n      const teamId = time.joukkue_id;\n      const round = time.era;\n      if (!combinedTimesByRound[round]) {\n        combinedTimesByRound[round] = {};\n      }\n      if (!combinedTimesByRound[round][teamId]) {\n        combinedTimesByRound[round][teamId] = 0;\n      }\n      combinedTimesByRound[round][teamId] += time.aika;\n    });\n    return combinedTimesByRound;\n  };\n  const findWinnersAndNonWinnersByRound = () => {\n    const combinedTimesByRound = calculateCombinedTimesByRound();\n    const winnersByRound = {};\n    const allWinners = [];\n    let allNonWinners = [];\n    Object.keys(combinedTimesByRound).forEach(round => {\n      const combinedTimesByTeam = combinedTimesByRound[round];\n      const roundWinners = findRoundWinners(combinedTimesByTeam);\n      allWinners.push(...roundWinners);\n      winnersByRound[round] = roundWinners;\n      const nonWinners = Object.keys(combinedTimesByTeam).filter(teamId => !roundWinners.some(winner => winner.teamId === teamId)).map(teamId => ({\n        teamId,\n        combinedTime: combinedTimesByTeam[teamId],\n        round\n      }));\n      allNonWinners.push(...nonWinners);\n    });\n    allNonWinners.sort((a, b) => a.combinedTime - b.combinedTime);\n    return {\n      winnersByRound,\n      allNonWinners\n    };\n  };\n  const findRoundWinners = combinedTimesByTeam => {\n    const roundWinners = [];\n    Object.keys(combinedTimesByTeam).forEach(teamId => {\n      const combinedTime = combinedTimesByTeam[teamId];\n      const isWinner = Object.values(combinedTimesByTeam).every(otherCombinedTime => combinedTime <= otherCombinedTime);\n      if (isWinner) {\n        roundWinners.push({\n          teamId,\n          combinedTime\n        });\n      }\n    });\n    return roundWinners;\n  };\n  const handleLopetaClick = () => {\n    try {\n      const {\n        winnersByRound,\n        allNonWinners\n      } = findWinnersAndNonWinnersByRound();\n\n      // Adjust the number of non-winners to be taken\n      const removedTeams = allNonWinners.slice(0, 4);\n      const remainingNonWinners = allNonWinners.slice(4);\n      const allWinners = Object.values(winnersByRound).reduce((acc, roundWinners) => acc.concat(roundWinners), []).concat(removedTeams);\n      setAllWinners(allWinners);\n      setRemainingNonWinners(remainingNonWinners);\n      console.log('All Winners:', allWinners);\n      console.log('All Non-winners:', remainingNonWinners);\n    } catch (error) {\n      console.error('Error handling lopeta click:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLopetaClick,\n      children: \"Lopeta er\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(KeräilyEräLopetus, \"Ak/8EFRhAg4HFqhPMQB2oqHH9sw=\");\n_c = KeräilyEräLopetus;\nexport default KeräilyEräLopetus;\nvar _c;\n$RefreshReg$(_c, \"Ker\\xE4ilyEr\\xE4Lopetus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","KeräilyEräLopetus","eraName","_s","times","setTimes","allWinners","setAllWinners","remainingNonWinners","setRemainingNonWinners","fetchTimes","response","fetch","ok","Error","data","json","filteredTimes","filter","time","era","includes","conso","error","console","calculateCombinedTimesByRound","combinedTimesByRound","forEach","teamId","joukkue_id","round","aika","findWinnersAndNonWinnersByRound","winnersByRound","allNonWinners","Object","keys","combinedTimesByTeam","roundWinners","findRoundWinners","push","nonWinners","some","winner","map","combinedTime","sort","a","b","isWinner","values","every","otherCombinedTime","handleLopetaClick","removedTeams","slice","reduce","acc","concat","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/KeräilyEräLopetus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst KeräilyEräLopetus = ({ eraName }) => {\r\n  const [times, setTimes] = useState([]);\r\n  const [allWinners, setAllWinners] = useState([]);\r\n  const [remainingNonWinners, setRemainingNonWinners] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTimes();\r\n  }, []);\r\n\r\n  const fetchTimes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/aikataulu');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch times');\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      // Filter times based on whether era includes \"Keräilyera\"\r\n      const filteredTimes = data.filter((time) => time.era.includes('Keräilyera'));\r\n  \r\n      setTimes(filteredTimes);\r\n      conso\r\n    } catch (error) {\r\n      console.error('Error fetching times:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const calculateCombinedTimesByRound = () => {\r\n    const combinedTimesByRound = {};\r\n\r\n    times.forEach((time) => {\r\n      const teamId = time.joukkue_id;\r\n      const round = time.era;\r\n\r\n      if (!combinedTimesByRound[round]) {\r\n        combinedTimesByRound[round] = {};\r\n      }\r\n\r\n      if (!combinedTimesByRound[round][teamId]) {\r\n        combinedTimesByRound[round][teamId] = 0;\r\n      }\r\n\r\n      combinedTimesByRound[round][teamId] += time.aika;\r\n    });\r\n\r\n    return combinedTimesByRound;\r\n  };\r\n\r\n  const findWinnersAndNonWinnersByRound = () => {\r\n    const combinedTimesByRound = calculateCombinedTimesByRound();\r\n    const winnersByRound = {};\r\n    const allWinners = [];\r\n    let allNonWinners = [];\r\n\r\n    Object.keys(combinedTimesByRound).forEach((round) => {\r\n      const combinedTimesByTeam = combinedTimesByRound[round];\r\n      const roundWinners = findRoundWinners(combinedTimesByTeam);\r\n\r\n      allWinners.push(...roundWinners);\r\n\r\n      winnersByRound[round] = roundWinners;\r\n\r\n      const nonWinners = Object.keys(combinedTimesByTeam)\r\n        .filter((teamId) => !roundWinners.some((winner) => winner.teamId === teamId))\r\n        .map((teamId) => ({ teamId, combinedTime: combinedTimesByTeam[teamId], round }));\r\n\r\n      allNonWinners.push(...nonWinners);\r\n    });\r\n\r\n    allNonWinners.sort((a, b) => a.combinedTime - b.combinedTime);\r\n\r\n    return { winnersByRound, allNonWinners };\r\n  };\r\n\r\n  const findRoundWinners = (combinedTimesByTeam) => {\r\n    const roundWinners = [];\r\n    Object.keys(combinedTimesByTeam).forEach((teamId) => {\r\n      const combinedTime = combinedTimesByTeam[teamId];\r\n\r\n      const isWinner = Object.values(combinedTimesByTeam).every(\r\n        (otherCombinedTime) => combinedTime <= otherCombinedTime\r\n      );\r\n\r\n      if (isWinner) {\r\n        roundWinners.push({ teamId, combinedTime });\r\n      }\r\n    });\r\n\r\n    return roundWinners;\r\n  };\r\n\r\n  const handleLopetaClick = () => {\r\n    try {\r\n      const { winnersByRound, allNonWinners } = findWinnersAndNonWinnersByRound();\r\n\r\n      // Adjust the number of non-winners to be taken\r\n      const removedTeams = allNonWinners.slice(0, 4);\r\n      const remainingNonWinners = allNonWinners.slice(4);\r\n\r\n      const allWinners = Object.values(winnersByRound)\r\n        .reduce((acc, roundWinners) => acc.concat(roundWinners), [])\r\n        .concat(removedTeams);\r\n\r\n      setAllWinners(allWinners);\r\n      setRemainingNonWinners(remainingNonWinners);\r\n\r\n      console.log('All Winners:', allWinners);\r\n      console.log('All Non-winners:', remainingNonWinners);\r\n    } catch (error) {\r\n      console.error('Error handling lopeta click:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleLopetaClick}>Lopeta erä</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeräilyEräLopetus;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}