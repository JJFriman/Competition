{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Socket from './Socket'; // Adjust the import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ajastin() {\n  _s();\n  const {\n    teamId\n  } = useParams(); // Access the teamId route parameter\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const socket = io('http://localhost:8000');\n    socket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    socket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, [teamId]);\n  useEffect(() => {\n    let timer;\n    if (isRunning) {\n      timer = setInterval(() => {\n        setElapsedTime(prevElapsedTime => {\n          const newElapsedTime = prevElapsedTime + 1;\n\n          // Emit the updated time to the server\n          const timeData = {\n            teamId,\n            elapsedTime: newElapsedTime\n          };\n          socket.emit('timerUpdate', JSON.stringify(timeData));\n          return newElapsedTime;\n        });\n      }, 10);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [isRunning]);\n  useEffect(() => {\n    if (selectedGroup && elapsedTime >= selectedGroup.selectedTask.max_aika * 100) {\n      // Stop the timer if it reaches the maximum time\n      stopTimer();\n    }\n  }, [elapsedTime, selectedGroup]);\n  const socket = io('http://localhost:8000'); // Move socket instantiation outside the component to avoid creating multiple sockets\n\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n  };\n  const formatTime = timeInMilliseconds => {\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\n    const seconds = Math.floor(timeInMilliseconds % (60 * 100) / 100);\n    const milliseconds = timeInMilliseconds % 100;\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Selected Task: ${selectedGroup.selectedTask.tehtävä_nimi}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Aika: \", formatTime(selectedGroup.selectedTask.max_aika * 100)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(elapsedTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Ajastin, \"nqy06wkLxoV2U1khs2WeEF0YypA=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","Socket","jsxDEV","_jsxDEV","Ajastin","_s","teamId","elapsedTime","setElapsedTime","isRunning","setIsRunning","selectedGroup","setSelectedGroup","document","title","socket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","timer","setInterval","prevElapsedTime","newElapsedTime","timeData","emit","stringify","clearInterval","selectedTask","max_aika","stopTimer","startTimer","resetTimer","formatTime","timeInMilliseconds","minutes","Math","floor","seconds","milliseconds","children","fileName","_jsxFileName","lineNumber","columnNumber","tehtävä_nimi","className","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport Socket from './Socket'; // Adjust the import path\r\nfunction Ajastin() {\r\n  const { teamId } = useParams(); // Access the teamId route parameter\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning) {\r\n      timer = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => {\r\n          const newElapsedTime = prevElapsedTime + 1;\r\n\r\n          // Emit the updated time to the server\r\n          const timeData = {\r\n            teamId,\r\n            elapsedTime: newElapsedTime,\r\n          };\r\n\r\n          socket.emit('timerUpdate', JSON.stringify(timeData));\r\n\r\n          return newElapsedTime;\r\n        });\r\n      }, 10);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [isRunning]);\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup && elapsedTime >= selectedGroup.selectedTask.max_aika * 100) {\r\n      // Stop the timer if it reaches the maximum time\r\n      stopTimer();\r\n    }\r\n  }, [elapsedTime, selectedGroup]);\r\n\r\n  const socket = io('http://localhost:8000'); // Move socket instantiation outside the component to avoid creating multiple sockets\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setElapsedTime(0);\r\n  };\r\n\r\n  const formatTime = (timeInMilliseconds) => {\r\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\r\n    const seconds = Math.floor((timeInMilliseconds % (60 * 100)) / 100);\r\n    const milliseconds = timeInMilliseconds % 100;\r\n\r\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>{`Selected Task: ${selectedGroup.selectedTask.tehtävä_nimi}`}</h3>\r\n          <p>Max Aika: {formatTime(selectedGroup.selectedTask.max_aika * 100)}</p>\r\n        </div>\r\n      )}\r\n      <div className=\"timer\">\r\n        <span>{formatTime(elapsedTime)}</span>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={startTimer}>Start</button>\r\n        <button onClick={stopTimer}>Stop</button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}