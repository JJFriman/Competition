{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\TasksSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksSelector({\n  onSelectTasks\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTaskNames, setSelectedTaskNames] = useState([null, null, null]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/tehtavat').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n    const storedSelectedTaskIds = localStorage.getItem('selectedTaskIds');\n    if (storedSelectedTaskIds) {\n      setSelectedTaskIds(JSON.parse(storedSelectedTaskIds));\n    }\n  }, []);\n  const handleTaskChange = (index, e) => {\n    const taskId = e.target.value;\n\n    // Ensure the task is not already selected\n    if (!selectedTaskIds.includes(taskId)) {\n      const newSelectedTaskIds = [...selectedTaskIds];\n      newSelectedTaskIds[index] = taskId;\n      onSelectTasks(newSelectedTaskIds);\n      setSelectedTaskIds(newSelectedTaskIds);\n      localStorage.setItem('selectedTaskIds', JSON.stringify(newSelectedTaskIds));\n    } else {\n      console.error('Task already selected:', taskId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(index => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTaskIds[index] || '0',\n      onChange: e => handleTaskChange(index, e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"Select a task\"\n      }, \"default\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: task.id,\n        children: task.tehtävä_nimi\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksSelector, \"Q38Q4fs7Oy4q1HVrPjLg4pTeCd0=\");\n_c = TasksSelector;\nexport default TasksSelector;\nvar _c;\n$RefreshReg$(_c, \"TasksSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TasksSelector","onSelectTasks","_s","tasks","setTasks","selectedTaskNames","setSelectedTaskNames","get","then","response","data","catch","error","console","storedSelectedTaskIds","localStorage","getItem","setSelectedTaskIds","JSON","parse","handleTaskChange","index","e","taskId","target","value","selectedTaskIds","includes","newSelectedTaskIds","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onChange","task","id","tehtävä_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/TasksSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TasksSelector({ onSelectTasks }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTaskNames, setSelectedTaskNames] = useState([null, null, null]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/api/tehtavat')\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n\r\n    const storedSelectedTaskIds = localStorage.getItem('selectedTaskIds');\r\n    if (storedSelectedTaskIds) {\r\n      setSelectedTaskIds(JSON.parse(storedSelectedTaskIds));\r\n    }\r\n  }, []);\r\n\r\n  const handleTaskChange = (index, e) => {\r\n    const taskId = e.target.value;\r\n\r\n    // Ensure the task is not already selected\r\n    if (!selectedTaskIds.includes(taskId)) {\r\n      const newSelectedTaskIds = [...selectedTaskIds];\r\n      newSelectedTaskIds[index] = taskId;\r\n\r\n      onSelectTasks(newSelectedTaskIds);\r\n      setSelectedTaskIds(newSelectedTaskIds);\r\n      localStorage.setItem('selectedTaskIds', JSON.stringify(newSelectedTaskIds));\r\n    } else {\r\n      console.error('Task already selected:', taskId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Selector</h2>\r\n      {[0, 1, 2].map((index) => (\r\n        <select\r\n          key={index}\r\n          value={selectedTaskIds[index] || '0'}\r\n          onChange={(e) => handleTaskChange(index, e)}\r\n        >\r\n          <option key=\"default\" value=\"0\">\r\n            Select a task\r\n          </option>\r\n          {tasks.map((task) => (\r\n            <option key={task.id} value={task.id}>\r\n              {task.tehtävä_nimi}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}