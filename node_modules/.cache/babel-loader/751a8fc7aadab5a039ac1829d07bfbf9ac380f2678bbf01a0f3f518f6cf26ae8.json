{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport '../css/Competition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [finishedTimes, setFinishedTimes] = useState({});\n  const [updatedGroupData, setUpdatedGroupData] = useState(null);\n  useEffect(() => {\n    const socket = io('http://localhost:8000');\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\n    });\n    socket.on('groupDataUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\n    });\n    socket.on('finishedTimeUpdate', finishedTimes => {\n      // Handle the finishedTimes object directly\n      console.log('Received finished time update:', finishedTimes);\n\n      // Update the state or perform other actions\n      setFinishedTimes(finishedTimes);\n      console.log('Updated finishedTimes:', finishedTimes);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const storedFinishedTimes = localStorage.getItem('finishedTimes');\n    if (storedFinishedTimes) {\n      const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\n      setFinishedTimes(parsedFinishedTimes);\n      console.log('Parsed Finished Times:', parsedFinishedTimes);\n    }\n  }, []);\n  function formatTime(milliseconds) {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const remainingSeconds = totalSeconds % 60;\n    const hundredths = Math.floor(milliseconds % 1000 / 10);\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n    return formattedTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), updatedGroupData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: updatedGroupData.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Tasks: \", updatedGroupData.selectedTasks.map(task => `${task.tehtävä_nimi} (${formatTime(task.max_aika * 1000)})`).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: updatedGroupData.teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), updatedGroupData.selectedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: task.tehtävä_nimi\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), Object.entries(finishedTimes[team.joukkue_id][task.tehtävä_nimi] || {}).map(([era, finishedTimeData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Finished Time: \", formatTime(finishedTimeData.finishedTime * 10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)\n            }, era, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this))]\n          }, task.tehtävä_nimi, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Combined Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatTime(updatedGroupData.selectedTasks.reduce((acc, task) => {\n                var _finishedTimes$team$j;\n                return acc + (((_finishedTimes$team$j = finishedTimes[team.joukkue_id][task.tehtävä_nimi]) === null || _finishedTimes$team$j === void 0 ? void 0 : _finishedTimes$team$j.finishedTime) || 0);\n              }, 0) * 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"2Cjw4fJiUqIyV0ZzrHaJmYG7b/U=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Competition","_s","selectedGroup","setSelectedGroup","finishedTimes","setFinishedTimes","updatedGroupData","setUpdatedGroupData","socket","on","parsedData","JSON","parse","localStorage","setItem","stringify","console","log","storedSelectedGroup","getItem","connected","disconnect","storedFinishedTimes","parsedFinishedTimes","formatTime","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","formattedTime","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","groupInfo","selectedTasks","map","task","tehtävä_nimi","max_aika","join","teams","team","joukkue_nimi","Object","entries","joukkue_id","era","finishedTimeData","finishedTime","reduce","acc","_finishedTimes$team$j","jäsenet","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport '../css/Competition.css';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [finishedTimes, setFinishedTimes] = useState({});\r\n  const [updatedGroupData, setUpdatedGroupData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\r\n    });\r\n\r\n    socket.on('groupDataUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\r\n    });\r\n\r\n    socket.on('finishedTimeUpdate', (finishedTimes) => {\r\n      // Handle the finishedTimes object directly\r\n      console.log('Received finished time update:', finishedTimes);\r\n    \r\n      // Update the state or perform other actions\r\n      setFinishedTimes(finishedTimes);\r\n    \r\n      console.log('Updated finishedTimes:', finishedTimes);\r\n    });\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedFinishedTimes = localStorage.getItem('finishedTimes');\r\n    if (storedFinishedTimes) {\r\n      const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\r\n      setFinishedTimes(parsedFinishedTimes);\r\n      console.log('Parsed Finished Times:', parsedFinishedTimes);\r\n    }\r\n  }, []);\r\n\r\n  function formatTime(milliseconds) {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const remainingSeconds = totalSeconds % 60;\r\n    const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n  \r\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n    return formattedTime;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {updatedGroupData ? (\r\n        <div>\r\n          <h2>{updatedGroupData.groupInfo}</h2>\r\n          <h3>\r\n            Selected Tasks: {updatedGroupData.selectedTasks.map((task) => `${task.tehtävä_nimi} (${formatTime(task.max_aika * 1000)})`).join(', ')}\r\n          </h3>\r\n          <ul>\r\n            {updatedGroupData.teams.map((team) => (\r\n              <div key={team.joukkue_id}>\r\n                <h3>{team.joukkue_nimi}</h3>\r\n                {updatedGroupData.selectedTasks.map((task) => (\r\n                  <div key={task.tehtävä_nimi}>\r\n                    <h4>{task.tehtävä_nimi}</h4>\r\n                    {Object.entries(finishedTimes[team.joukkue_id][task.tehtävä_nimi] || {}).map(([era, finishedTimeData]) => (\r\n                      <div key={era}>\r\n                        <p>Finished Time: {formatTime(finishedTimeData.finishedTime * 10)}</p>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n                <div>\r\n                  <h4>Combined Time</h4>\r\n                  <p>\r\n                    {formatTime(\r\n                      updatedGroupData.selectedTasks.reduce(\r\n                        (acc, task) => acc + (finishedTimes[team.joukkue_id][task.tehtävä_nimi]?.finishedTime || 0),\r\n                        0\r\n                      ) * 10\r\n                    )}\r\n                  </p>\r\n                </div>\r\n                <p>Members: {team.jäsenet}</p>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n  \r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}