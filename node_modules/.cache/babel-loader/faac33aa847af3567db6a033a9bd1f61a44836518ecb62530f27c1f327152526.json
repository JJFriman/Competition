{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [finishedTimes, setFinishedTimes] = useState({});\n  useEffect(() => {\n    const socket = io('http://localhost:8000');\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    socket.on('finishedTime', finishedTimeData => {\n      console.log('Received finished time data:', finishedTimeData); // Add this line for debugging\n      try {\n        const parsedData = JSON.parse(finishedTimeData);\n        if (parsedData && parsedData.teamId && parsedData.finishedTime) {\n          setFinishedTimes(prevFinishedTimes => ({\n            ...prevFinishedTimes,\n            [parsedData.teamId]: parsedData.finishedTime\n          }));\n        } else {\n          console.error('Invalid finished time data:', finishedTimeData);\n        }\n      } catch (error) {\n        console.error('Error parsing finished time data:', error);\n      }\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  console.log('Finished Times:', finishedTimes); // Add this line for debugging\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), selectedGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedGroup.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Task: \", selectedGroup.selectedTask ? selectedGroup.selectedTask.tehtävä_nimi : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Aika: \", selectedGroup.selectedTask ? selectedGroup.selectedTask.max_aika : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), finishedTimes[team.joukkue_id] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Finished Time: \", finishedTimes[team.joukkue_id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"+PcCuy5bOXg6s9ikfXH9yXyc46o=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Competition","_s","selectedGroup","setSelectedGroup","finishedTimes","setFinishedTimes","socket","on","updatedGroupData","console","log","parsedData","JSON","parse","localStorage","setItem","finishedTimeData","teamId","finishedTime","prevFinishedTimes","error","storedSelectedGroup","getItem","connected","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","groupInfo","selectedTask","tehtävä_nimi","max_aika","teams","map","team","joukkue_nimi","jäsenet","joukkue_id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [finishedTimes, setFinishedTimes] = useState({});\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    socket.on('finishedTime', (finishedTimeData) => {\r\n      console.log('Received finished time data:', finishedTimeData); // Add this line for debugging\r\n      try {\r\n        const parsedData = JSON.parse(finishedTimeData);\r\n    \r\n        if (parsedData && parsedData.teamId && parsedData.finishedTime) {\r\n          setFinishedTimes((prevFinishedTimes) => ({\r\n            ...prevFinishedTimes,\r\n            [parsedData.teamId]: parsedData.finishedTime,\r\n          }));\r\n        } else {\r\n          console.error('Invalid finished time data:', finishedTimeData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing finished time data:', error);\r\n      }\r\n    });\r\n    \r\n    \r\n    \r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  console.log('Finished Times:', finishedTimes); // Add this line for debugging\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {selectedGroup ? (\r\n        <div>\r\n          <h2>{selectedGroup.groupInfo}</h2>\r\n          <h3>Selected Task: {selectedGroup.selectedTask ? selectedGroup.selectedTask.tehtävä_nimi : 'None'}</h3>\r\n          <p>Max Aika: {selectedGroup.selectedTask ? selectedGroup.selectedTask.max_aika : 'N/A'}</p>\r\n\r\n          <ul>\r\n            {selectedGroup.teams.map((team) => (\r\n              <li key={team.joukkue_id}>\r\n                <h3>{team.joukkue_nimi}</h3>\r\n                <p>Members: {team.jäsenet}</p>\r\n                {finishedTimes[team.joukkue_id] && (\r\n                  <p>Finished Time: {finishedTimes[team.joukkue_id]}</p>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGT,EAAE,CAAC,uBAAuB,CAAC;IAE1CS,MAAM,CAACC,EAAE,CAAC,qBAAqB,EAAGC,gBAAgB,IAAK;MACrDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,gBAAgB,CAAC;MAC7D,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;MAC/CL,gBAAgB,CAACQ,UAAU,CAAC;MAC5BG,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEP,gBAAgB,CAAC;IACzD,CAAC,CAAC;IAEFF,MAAM,CAACC,EAAE,CAAC,cAAc,EAAGS,gBAAgB,IAAK;MAC9CP,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEM,gBAAgB,CAAC,CAAC,CAAC;MAC/D,IAAI;QACF,MAAML,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACG,gBAAgB,CAAC;QAE/C,IAAIL,UAAU,IAAIA,UAAU,CAACM,MAAM,IAAIN,UAAU,CAACO,YAAY,EAAE;UAC9Db,gBAAgB,CAAEc,iBAAiB,KAAM;YACvC,GAAGA,iBAAiB;YACpB,CAACR,UAAU,CAACM,MAAM,GAAGN,UAAU,CAACO;UAClC,CAAC,CAAC,CAAC;QACL,CAAC,MAAM;UACLT,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEJ,gBAAgB,CAAC;QAChE;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC,CAAC;IAKF,MAAMC,mBAAmB,GAAGP,YAAY,CAACQ,OAAO,CAAC,eAAe,CAAC;IACjE,IAAID,mBAAmB,EAAE;MACvB,MAAMV,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACQ,mBAAmB,CAAC;MAClDlB,gBAAgB,CAACQ,UAAU,CAAC;IAC9B;IAEA,OAAO,MAAM;MACX,IAAIL,MAAM,CAACiB,SAAS,EAAE;QACpBjB,MAAM,CAACkB,UAAU,CAAC,CAAC;MACrB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENf,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,aAAa,CAAC,CAAC,CAAC;;EAE/C,oBACEL,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB3B,aAAa,gBACZH,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAKvB,aAAa,CAAC4B;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClC9B,OAAA;QAAA0B,QAAA,GAAI,iBAAe,EAACvB,aAAa,CAAC6B,YAAY,GAAG7B,aAAa,CAAC6B,YAAY,CAACC,YAAY,GAAG,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvG9B,OAAA;QAAA0B,QAAA,GAAG,YAAU,EAACvB,aAAa,CAAC6B,YAAY,GAAG7B,aAAa,CAAC6B,YAAY,CAACE,QAAQ,GAAG,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE3F9B,OAAA;QAAA0B,QAAA,EACGvB,aAAa,CAACgC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAC5BrC,OAAA;UAAA0B,QAAA,gBACE1B,OAAA;YAAA0B,QAAA,EAAKW,IAAI,CAACC;UAAY;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5B9B,OAAA;YAAA0B,QAAA,GAAG,WAAS,EAACW,IAAI,CAACE,OAAO;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC7BzB,aAAa,CAACgC,IAAI,CAACG,UAAU,CAAC,iBAC7BxC,OAAA;YAAA0B,QAAA,GAAG,iBAAe,EAACrB,aAAa,CAACgC,IAAI,CAACG,UAAU,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACtD;QAAA,GALMO,IAAI,CAACG,UAAU;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMpB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAEN9B,OAAA;MAAA0B,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CA5EQD,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AA8EpB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}