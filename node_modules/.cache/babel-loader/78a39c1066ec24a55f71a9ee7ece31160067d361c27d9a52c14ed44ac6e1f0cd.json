{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [message, setMessage] = useState(''); // Store received WebSocket messages\n\n  useEffect(() => {\n    // Create a WebSocket server (for testing within the same component)\n    const server = new WebSocket('ws://localhost:3002'); // Replace with your WebSocket server URL\n\n    server.onopen = () => {\n      console.log('WebSocket server connection is open.');\n    };\n    server.onmessage = event => {\n      const receivedMessage = event.data;\n      setMessage(receivedMessage);\n    };\n\n    // Send a test message to the server\n    server.send('Hello, WebSocket server!');\n    return () => {\n      if (server && server.readyState === WebSocket.OPEN) {\n        server.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Received Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","message","setMessage","server","WebSocket","onopen","console","log","onmessage","event","receivedMessage","data","send","readyState","OPEN","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [message, setMessage] = useState(''); // Store received WebSocket messages\r\n\r\n  useEffect(() => {\r\n    // Create a WebSocket server (for testing within the same component)\r\n    const server = new WebSocket('ws://localhost:3002'); // Replace with your WebSocket server URL\r\n\r\n    server.onopen = () => {\r\n      console.log('WebSocket server connection is open.');\r\n    };\r\n\r\n    server.onmessage = (event) => {\r\n      const receivedMessage = event.data;\r\n      setMessage(receivedMessage);\r\n    };\r\n\r\n    // Send a test message to the server\r\n    server.send('Hello, WebSocket server!');\r\n\r\n    return () => {\r\n      if (server && server.readyState === WebSocket.OPEN) {\r\n        server.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition Alkuerä</h1>\r\n      {message && (\r\n        <div>\r\n          <h2>Received Message</h2>\r\n          <p>{message}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;;IAErDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACrD,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,eAAe,GAAGD,KAAK,CAACE,IAAI;MAClCT,UAAU,CAACQ,eAAe,CAAC;IAC7B,CAAC;;IAED;IACAP,MAAM,CAACS,IAAI,CAAC,0BAA0B,CAAC;IAEvC,OAAO,MAAM;MACX,IAAIT,MAAM,IAAIA,MAAM,CAACU,UAAU,KAAKT,SAAS,CAACU,IAAI,EAAE;QAClDX,MAAM,CAACY,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BnB,OAAO,iBACNH,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBtB,OAAA;QAAAkB,QAAA,EAAIf;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CArCQD,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AAuC3B,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}