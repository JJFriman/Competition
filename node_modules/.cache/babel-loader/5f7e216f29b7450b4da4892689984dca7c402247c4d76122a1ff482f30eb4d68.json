{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  useEffect(() => {\n    document.title = 'Kilpailu';\n    const socket = io('http://localhost:8000');\n    socket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    socket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    socket.on('selectedTaskUpdate', updatedTaskData => {\n      console.log('Received updated task data:', updatedTaskData);\n      setSelectedTask(updatedTaskData);\n      console.log('Selected Task State:', selectedTask); // Add this line\n    });\n\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Selected Task: \", selectedTask ? selectedTask.tehtävä_nimi : 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), selectedGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedGroup.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"/61ecK8kH6kOlGPXEeQRqnwbmhM=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Competition","_s","selectedGroup","setSelectedGroup","selectedTask","setSelectedTask","document","title","socket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","updatedTaskData","storedSelectedGroup","getItem","connected","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","tehtävä_nimi","groupInfo","teams","map","team","joukkue_nimi","jäsenet","joukkue_id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = 'Kilpailu';\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    socket.on('selectedTaskUpdate', (updatedTaskData) => {\r\n      console.log('Received updated task data:', updatedTaskData);\r\n      setSelectedTask(updatedTaskData);\r\n      console.log('Selected Task State:', selectedTask); // Add this line\r\n    });\r\n    \r\n    \r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      <h3>Selected Task: {selectedTask ? selectedTask.tehtävä_nimi : 'None'}</h3>\r\n      {selectedGroup ? (\r\n        <div>\r\n          <h2>{selectedGroup.groupInfo}</h2>\r\n\r\n          <ul>\r\n            {selectedGroup.teams.map((team) => (\r\n              <li key={team.joukkue_id}>\r\n                <h3>{team.joukkue_nimi}</h3>\r\n                <p>Members: {team.jäsenet}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}