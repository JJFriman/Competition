{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst Ajastin = ({\n  teamId,\n  tasks,\n  era,\n  maxAika\n}) => {\n  _s();\n  const [lapTimes, setLapTimes] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const intervalIdRef = useRef(null);\n  useEffect(() => {\n    document.title = `Team ${teamId} Stopwatch`;\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setLapTimes([]);\n      setIsRunning(false);\n      setElapsedTime(0);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, [teamId]);\n  useEffect(() => {\n    const formattedMaxAika = maxAika;\n    if (isRunning && elapsedTime >= formattedMaxAika) {\n      stopTimer();\n    }\n    if (isRunning) {\n      const intervalId = setInterval(() => {\n        setElapsedTime(prevElapsedTime => prevElapsedTime + 1);\n      }, 10);\n      intervalIdRef.current = intervalId;\n    } else {\n      clearInterval(intervalIdRef.current);\n    }\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, [isRunning, teamId, maxAika, elapsedTime]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    if (elapsedTime > 0) {\n      const formattedTime = formatTime(elapsedTime * 10);\n      setLapTimes(prevLapTimes => [...prevLapTimes, formattedTime]);\n    }\n    resetTimer();\n  };\n  const resetTimer = () => {\n    setElapsedTime(0);\n    clearInterval(intervalIdRef.current);\n  };\n  const handleLapTimeEnd = task => {\n    const formattedTime = formatTime(elapsedTime * 10);\n    setLapTimes(prevLapTimes => [...prevLapTimes, formattedTime]);\n    resetTimer();\n    postLapTimeToMySQL(era, task.tehtävä_nimi, teamId, formattedTime);\n  };\n  function formatTime(milliseconds) {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const remainingSeconds = totalSeconds % 60;\n    const hundredths = Math.floor(milliseconds % 1000 / 10);\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n  }\n  const postLapTimeToMySQL = async (era, tehtava, teamId, finishedTime) => {\n    const selectedGroup = localStorage.getItem('selectedGroup');\n    if (selectedGroup) {\n      try {\n        const parsedData = JSON.parse(selectedGroup);\n        const response = await fetch('http://localhost:3001/api/aikataulu', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            era: parsedData.groupInfo,\n            tehtava,\n            joukkueId: teamId,\n            aika: finishedTime\n          })\n        });\n        if (!response.ok) {\n          console.error('Failed to send finished time to aikataulu:', response.status);\n        }\n      } catch (error) {\n        console.error('Error sending finished time to aikataulu:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: era\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.tehtävä_nimi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: lapTimes.length > index ? lapTimes[index] : formatTime(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            disabled: isRunning,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLapTimeEnd(task),\n            disabled: !isRunning,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Ajastin, \"PJviijTsjlpTZNjaHnXMfuugl5Y=\");\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","io","jsxDEV","_jsxDEV","socket","Ajastin","teamId","tasks","era","maxAika","_s","lapTimes","setLapTimes","isRunning","setIsRunning","elapsedTime","setElapsedTime","intervalIdRef","document","title","on","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","clearInterval","current","formattedMaxAika","stopTimer","intervalId","setInterval","prevElapsedTime","startTimer","formattedTime","formatTime","prevLapTimes","resetTimer","handleLapTimeEnd","task","postLapTimeToMySQL","tehtävä_nimi","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","String","padStart","tehtava","finishedTime","selectedGroup","getItem","response","fetch","method","headers","body","stringify","groupInfo","joukkueId","aika","ok","console","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","className","length","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst Ajastin = ({ teamId, tasks, era, maxAika }) => {\r\n  const [lapTimes, setLapTimes] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const intervalIdRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId} Stopwatch`;\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setLapTimes([]);\r\n      setIsRunning(false);\r\n      setElapsedTime(0);\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, [teamId]);\r\n\r\n  useEffect(() => {\r\n    const formattedMaxAika = maxAika;\r\n\r\n    if (isRunning && elapsedTime >= formattedMaxAika) {\r\n      stopTimer();\r\n    }\r\n\r\n    if (isRunning) {\r\n      const intervalId = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1);\r\n      }, 10);\r\n      intervalIdRef.current = intervalId;\r\n    } else {\r\n      clearInterval(intervalIdRef.current);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, [isRunning, teamId, maxAika, elapsedTime]);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n\r\n    if (elapsedTime > 0) {\r\n      const formattedTime = formatTime(elapsedTime * 10);\r\n      setLapTimes((prevLapTimes) => [...prevLapTimes, formattedTime]);\r\n    }\r\n\r\n    resetTimer();\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setElapsedTime(0);\r\n    clearInterval(intervalIdRef.current);\r\n  };\r\n\r\n  const handleLapTimeEnd = (task) => {\r\n    const formattedTime = formatTime(elapsedTime * 10);\r\n    setLapTimes((prevLapTimes) => [...prevLapTimes, formattedTime]);\r\n    resetTimer();\r\n    postLapTimeToMySQL(era, task.tehtävä_nimi, teamId, formattedTime);\r\n  };\r\n\r\n  function formatTime(milliseconds) {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const remainingSeconds = totalSeconds % 60;\r\n    const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n\r\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n  }\r\n\r\n  const postLapTimeToMySQL = async (era, tehtava, teamId, finishedTime) => {\r\n    const selectedGroup = localStorage.getItem('selectedGroup');\r\n\r\n    if (selectedGroup) {\r\n      try {\r\n        const parsedData = JSON.parse(selectedGroup);\r\n        const response = await fetch('http://localhost:3001/api/aikataulu', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            era: parsedData.groupInfo,\r\n            tehtava,\r\n            joukkueId: teamId,\r\n            aika: finishedTime,\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          console.error('Failed to send finished time to aikataulu:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending finished time to aikataulu:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      <div>\r\n        <h3>{era}</h3>\r\n        {tasks.map((task, index) => (\r\n          <div key={index}>\r\n            <h4>{task.tehtävä_nimi}</h4>\r\n            <div className=\"timer\">\r\n              <span>{lapTimes.length > index ? lapTimes[index] : formatTime(0)}</span>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <button onClick={startTimer} disabled={isRunning}>\r\n                Start\r\n              </button>\r\n              <button onClick={() => handleLapTimeEnd(task)} disabled={!isRunning}>\r\n                Stop\r\n              </button>\r\n              <button onClick={resetTimer}>Reset</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}