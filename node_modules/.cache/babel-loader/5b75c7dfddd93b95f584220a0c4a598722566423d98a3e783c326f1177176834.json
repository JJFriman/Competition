{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst Ajastin = () => {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [laps, setLaps] = useState([]);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setLaps([]);\n      setIsRunning(false);\n      setElapsedTime(0);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    socket.emit('join', {\n      teamId\n    });\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  const handleTimerUpdate = () => {\n    socket.emit('timerUpdate', {\n      teamId,\n      era: selectedGroup.groupInfo,\n      isRunning,\n      elapsedTime\n    });\n  };\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    setLaps([...laps, elapsedTime]);\n    handleTimerUpdate();\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n    setLaps([]);\n    handleTimerUpdate();\n  };\n  const formatTime = milliseconds => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const remainingSeconds = totalSeconds % 60;\n    const hundredths = Math.floor(milliseconds % 1000 / 10);\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.tehtävä_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Aika: \", formatTime(task.max_aika * 100)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(elapsedTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startTimer,\n              disabled: isRunning,\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopTimer,\n              disabled: !isRunning,\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetTimer,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: laps.map((lap, lapIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `Lap ${lapIndex + 1}: ${formatTime(lap)}`\n            }, lapIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, task.tehtävä_nimi, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Ajastin, \"OjL4uASliNQXET+o9uP4tdX+jcw=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","socket","Ajastin","_s","teamId","selectedGroup","setSelectedGroup","isRunning","setIsRunning","elapsedTime","setElapsedTime","laps","setLaps","document","title","newSocket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","emit","connected","disconnect","handleTimerUpdate","era","groupInfo","startTimer","stopTimer","resetTimer","formatTime","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTasks","map","task","index","tehtävä_nimi","max_aika","className","onClick","disabled","lap","lapIndex","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst Ajastin = () => {\r\n  const { teamId } = useParams();\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [laps, setLaps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setLaps([]);\r\n      setIsRunning(false);\r\n      setElapsedTime(0);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    socket.emit('join', { teamId });\r\n\r\n    return () => {\r\n      if (newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  const handleTimerUpdate = () => {\r\n    socket.emit('timerUpdate', {\r\n      teamId,\r\n      era: selectedGroup.groupInfo,\r\n      isRunning,\r\n      elapsedTime,\r\n    });\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n    setLaps([...laps, elapsedTime]);\r\n    handleTimerUpdate();\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setElapsedTime(0);\r\n    setLaps([]);\r\n    handleTimerUpdate();\r\n  };\r\n\r\n  const formatTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const remainingSeconds = totalSeconds % 60;\r\n    const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n\r\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>Selected Tasks:</h3>\r\n          <ul>\r\n            {selectedGroup.selectedTasks.map((task, index) => (\r\n              <div key={task.tehtävä_nimi}>\r\n                <h3>{task.tehtävä_nimi}</h3>\r\n                <p>Max Aika: {formatTime(task.max_aika * 100)}</p>\r\n                <div className=\"timer\">\r\n                  <span>{formatTime(elapsedTime)}</span>\r\n                </div>\r\n                <div className=\"controls\">\r\n                  <button onClick={startTimer} disabled={isRunning}>\r\n                    Start\r\n                  </button>\r\n                  <button onClick={stopTimer} disabled={!isRunning}>\r\n                    Stop\r\n                  </button>\r\n                  <button onClick={resetTimer}>Reset</button>\r\n                </div>\r\n                <ul>\r\n                  {laps.map((lap, lapIndex) => (\r\n                    <li key={lapIndex}>{`Lap ${lapIndex + 1}: ${formatTime(lap)}`}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}