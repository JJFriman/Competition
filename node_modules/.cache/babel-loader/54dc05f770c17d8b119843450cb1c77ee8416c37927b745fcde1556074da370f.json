{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  useEffect(() => {\n    const socket = io('http://localhost:8000', {\n      transports: ['websocket']\n    });\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData); // Parse the updated data\n      setSelectedGroup(parsedData);\n\n      // Store the selected group data in local storage\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n\n    // Check if there's a selected group in local storage\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), selectedGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedGroup.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), selectedGroup.teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Team \", team.joukkue_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Team Name: \", team.joukkue_nimi]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Members: \", team.jäsenet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, team.joukkue_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"wrc6EZXGjYZoHvkiflwVwIyqLQ0=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","jsxDEV","_jsxDEV","Competition","_s","selectedGroup","setSelectedGroup","socket","transports","on","updatedGroupData","console","log","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","groupInfo","teams","map","team","index","joukkue_id","joukkue_nimi","jäsenet","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:8000', {\r\n      transports: ['websocket'],\r\n    });\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData); // Parse the updated data\r\n      setSelectedGroup(parsedData);\r\n\r\n      // Store the selected group data in local storage\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    // Check if there's a selected group in local storage\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {selectedGroup ? (\r\n        <div>\r\n          <h2>{selectedGroup.groupInfo}</h2>\r\n          {selectedGroup.teams.map((team, index) => (\r\n            <div key={team.joukkue_id}>\r\n              <h3>Team {team.joukkue_id}</h3>\r\n              <p>Team Name: {team.joukkue_nimi}</p>\r\n              <p>Members: {team.jäsenet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}