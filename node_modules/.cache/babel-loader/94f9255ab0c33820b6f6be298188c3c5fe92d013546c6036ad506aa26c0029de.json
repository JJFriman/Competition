{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionFinaali.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompetitionFetch from './CompetitionFetch';\nimport '../css/CompetitionAlkuerä.css';\nimport TasksSelector from './TasksSelector';\nimport { io } from 'socket.io-client';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionFinaali() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [selectedTasks, setSelectedTasks] = useState([null, null, null]);\n  const handleSelectTasks = tasks => {\n    setSelectedTasks(tasks);\n  };\n  useEffect(() => {\n    document.title = 'Finaali';\n    const newSocket = io('http://localhost:8000');\n    const storedSelectedGroupIndex = localStorage.getItem('selectedGroupIndex');\n    if (storedSelectedGroupIndex) {\n      setSelectedGroup(parseInt(storedSelectedGroupIndex, 10));\n    }\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    setSocket(newSocket);\n    return () => {\n      if (newSocket && newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, []);\n  const handleDataFetched = data => {\n    // Filter teams with finalist\n    const finalistTeams = data.filter(team => team.finalist);\n\n    // Sort teams in descending order based on finalist\n    const sortedTeams = [...finalistTeams].sort((a, b) => b.finalist - a.finalist);\n    setTeams(sortedTeams);\n  };\n  const handleGroupSelection = () => {\n    setSelectedGroup(0); // For a single round, set the selected group to 0\n\n    if (socket && socket.connected) {\n      const selectedGroupData = {\n        groupInfo: 'Finaali',\n        // You can modify this as needed\n        teams: teams,\n        selectedTaskNames: selectedTasks.map(task => task.tehtava_nimi),\n        selectedTasks: selectedTasks\n      };\n      const jsonData = JSON.stringify(selectedGroupData);\n      console.log('Sending selected group data:', jsonData);\n      socket.emit('selectedGroup', jsonData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Finaali\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Finaali\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksSelector, {\n      onSelectTasks: handleSelectTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `group ${selectedGroup === 0 ? 'highlighted-group' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Finaali\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGroupSelection,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/team/${team.joukkue_id}`,\n              children: team.joukkue_nimi\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, team.joukkue_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompetitionFetch, {\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionFinaali, \"LdWaXq9bhDQdA2EUNoXz8UVzC3I=\");\n_c = CompetitionFinaali;\nexport default CompetitionFinaali;\nvar _c;\n$RefreshReg$(_c, \"CompetitionFinaali\");","map":{"version":3,"names":["React","useState","useEffect","CompetitionFetch","TasksSelector","io","Link","jsxDEV","_jsxDEV","CompetitionFinaali","_s","teams","setTeams","selectedGroup","setSelectedGroup","socket","setSocket","selectedTasks","setSelectedTasks","handleSelectTasks","tasks","document","title","newSocket","storedSelectedGroupIndex","localStorage","getItem","parseInt","on","console","log","connected","disconnect","handleDataFetched","data","finalistTeams","filter","team","finalist","sortedTeams","sort","a","b","handleGroupSelection","selectedGroupData","groupInfo","selectedTaskNames","map","task","tehtava_nimi","jsonData","JSON","stringify","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectTasks","className","onClick","to","joukkue_id","joukkue_nimi","onDataFetched","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionFinaali.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CompetitionFetch from './CompetitionFetch';\r\nimport '../css/CompetitionAlkuerä.css';\r\nimport TasksSelector from './TasksSelector';\r\nimport { io } from 'socket.io-client';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CompetitionFinaali() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [selectedTasks, setSelectedTasks] = useState([null, null, null]);\r\n\r\n  const handleSelectTasks = (tasks) => {\r\n    setSelectedTasks(tasks);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Finaali';\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    const storedSelectedGroupIndex = localStorage.getItem('selectedGroupIndex');\r\n    if (storedSelectedGroupIndex) {\r\n      setSelectedGroup(parseInt(storedSelectedGroupIndex, 10));\r\n    }\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      if (newSocket && newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleDataFetched = (data) => {\r\n    // Filter teams with finalist\r\n    const finalistTeams = data.filter((team) => team.finalist);\r\n\r\n    // Sort teams in descending order based on finalist\r\n    const sortedTeams = [...finalistTeams].sort((a, b) => b.finalist - a.finalist);\r\n\r\n    setTeams(sortedTeams);\r\n  };\r\n\r\n  const handleGroupSelection = () => {\r\n    setSelectedGroup(0); // For a single round, set the selected group to 0\r\n\r\n    if (socket && socket.connected) {\r\n      const selectedGroupData = {\r\n        groupInfo: 'Finaali', // You can modify this as needed\r\n        teams: teams,\r\n        selectedTaskNames: selectedTasks.map((task) => task.tehtava_nimi),\r\n        selectedTasks: selectedTasks,\r\n      };\r\n\r\n      const jsonData = JSON.stringify(selectedGroupData);\r\n      console.log('Sending selected group data:', jsonData);\r\n      socket.emit('selectedGroup', jsonData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <title>Finaali</title>\r\n      <h1>Competition Finaali</h1>\r\n      <TasksSelector onSelectTasks={handleSelectTasks} />\r\n      <div className=\"groups-container\">\r\n        <div className={`group ${selectedGroup === 0 ? 'highlighted-group' : ''}`}>\r\n          <h2>Finaali</h2>\r\n          <button onClick={handleGroupSelection}>Select</button>\r\n          {teams.map((team) => (\r\n            <div key={team.joukkue_id} className=\"team\">\r\n              <h3>\r\n                <Link to={`/team/${team.joukkue_id}`}>{team.joukkue_nimi}</Link>\r\n              </h3>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <CompetitionFetch onDataFetched={handleDataFetched} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionFinaali;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}