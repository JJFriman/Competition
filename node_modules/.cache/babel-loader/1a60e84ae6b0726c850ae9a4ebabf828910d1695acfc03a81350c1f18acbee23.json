{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport AjastinKello from './AjastinKello';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ajastin() {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [laps, setLaps] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setLaps([]);\n      setIsRunning(false);\n      setElapsedTime(0);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    setSocket(newSocket);\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  const handleTimerUpdate = () => {\n    socket.emit('timerUpdate', {\n      teamId,\n      era: selectedGroup.groupInfo,\n      isRunning,\n      elapsedTime\n    });\n  };\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    setLaps([...laps, elapsedTime]);\n    handleTimerUpdate();\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n    setLaps([]);\n    handleTimerUpdate();\n  };\n  const formatTime = milliseconds => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const remainingSeconds = totalSeconds % 60;\n    const hundredths = Math.floor(milliseconds % 1000 / 10);\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(AjastinKello, {\n            task: task,\n            isRunning: isRunning,\n            elapsedTime: elapsedTime,\n            startTimer: startTimer,\n            stopTimer: stopTimer,\n            resetTimer: resetTimer,\n            formatTime: formatTime,\n            laps: laps,\n            setLaps: setLaps,\n            handleTimerUpdate: handleTimerUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, task.tehtävä_nimi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Ajastin, \"4AQU9BRVOet8cpVJJJFyj9XzoIE=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","AjastinKello","jsxDEV","_jsxDEV","Ajastin","_s","teamId","selectedGroup","setSelectedGroup","socket","setSocket","laps","setLaps","isRunning","setIsRunning","elapsedTime","setElapsedTime","document","title","newSocket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","handleTimerUpdate","emit","era","groupInfo","startTimer","stopTimer","resetTimer","formatTime","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTasks","map","task","index","tehtävä_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport AjastinKello from './AjastinKello';\r\n\r\nfunction Ajastin() {\r\n  const { teamId } = useParams();\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [laps, setLaps] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setLaps([]);\r\n      setIsRunning(false);\r\n      setElapsedTime(0);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      if (newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  const handleTimerUpdate = () => {\r\n    socket.emit('timerUpdate', {\r\n      teamId,\r\n      era: selectedGroup.groupInfo,\r\n      isRunning,\r\n      elapsedTime,\r\n    });\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n    setLaps([...laps, elapsedTime]);\r\n    handleTimerUpdate();\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setElapsedTime(0);\r\n    setLaps([]);\r\n    handleTimerUpdate();\r\n  };\r\n\r\n  const formatTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const remainingSeconds = totalSeconds % 60;\r\n    const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n\r\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>Selected Tasks:</h3>\r\n          <ul>\r\n            {selectedGroup.selectedTasks.map((task, index) => (\r\n              <li key={task.tehtävä_nimi}>\r\n                <AjastinKello\r\n                  task={task}\r\n                  isRunning={isRunning}\r\n                  elapsedTime={elapsedTime}\r\n                  startTimer={startTimer}\r\n                  stopTimer={stopTimer}\r\n                  resetTimer={resetTimer}\r\n                  formatTime={formatTime}\r\n                  laps={laps}\r\n                  setLaps={setLaps}\r\n                  handleTimerUpdate={handleTimerUpdate}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}