{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\NewAjastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst NewAjastin = ({\n  teamId,\n  era,\n  task,\n  maxAika\n}) => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalIdRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    const formattedMaxAika = maxAika;\n    if (isRunning && elapsedTime >= formattedMaxAika) {\n      console.log('Stopping timer...');\n      stopTimer();\n    }\n    if (isRunning) {\n      const intervalId = setInterval(() => {\n        setElapsedTime(prevElapsedTime => prevElapsedTime + 10); // Adjust interval to match AjastinKello\n      }, 10);\n      intervalIdRef.current = intervalId;\n    } else {\n      clearInterval(intervalIdRef.current);\n    }\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, [isRunning, teamId, era, task.tehtävä_nimi, maxAika, elapsedTime]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    const finishedTime = elapsedTime;\n    socket.emit('finishedTime', {\n      teamId,\n      era,\n      taskName: task.tehtävä_nimi,\n      finishedTime\n    });\n  };\n  const resetTimer = () => {\n    setElapsedTime(0);\n    clearInterval(intervalIdRef.current);\n    setIsRunning(false);\n  };\n  const formatTime = milliseconds => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const remainingSeconds = totalSeconds % 60;\n    const hundredths = Math.floor(milliseconds % 1000 / 10);\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.tehtävä_nimi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Max Aika: \", formatTime(maxAika * 100)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(elapsedTime * 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        disabled: isRunning,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        disabled: !isRunning,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(NewAjastin, \"nnGTbcYB9CEf/jGK8ShcSV5Iqq0=\");\n_c = NewAjastin;\nexport default NewAjastin;\nvar _c;\n$RefreshReg$(_c, \"NewAjastin\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","NewAjastin","teamId","era","task","maxAika","_s","elapsedTime","setElapsedTime","isRunning","setIsRunning","intervalIdRef","clearInterval","current","formattedMaxAika","console","log","stopTimer","intervalId","setInterval","prevElapsedTime","tehtävä_nimi","startTimer","finishedTime","emit","taskName","resetTimer","formatTime","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/NewAjastin.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst NewAjastin = ({ teamId, era, task, maxAika }) => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalIdRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const formattedMaxAika = maxAika;\r\n\r\n    if (isRunning && elapsedTime >= formattedMaxAika) {\r\n      console.log('Stopping timer...');\r\n      stopTimer();\r\n    }\r\n\r\n    if (isRunning) {\r\n      const intervalId = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 10); // Adjust interval to match AjastinKello\r\n      }, 10);\r\n      intervalIdRef.current = intervalId;\r\n    } else {\r\n      clearInterval(intervalIdRef.current);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, [isRunning, teamId, era, task.tehtävä_nimi, maxAika, elapsedTime]);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n    const finishedTime = elapsedTime;\r\n    socket.emit('finishedTime', {\r\n      teamId,\r\n      era,\r\n      taskName: task.tehtävä_nimi,\r\n      finishedTime,\r\n    });\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setElapsedTime(0);\r\n    clearInterval(intervalIdRef.current);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const formatTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const remainingSeconds = totalSeconds % 60;\r\n    const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n\r\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>{task.tehtävä_nimi}</h3>\r\n      <p>Max Aika: {formatTime(maxAika * 100)}</p>\r\n      <div className=\"timer\">\r\n        <span>{formatTime(elapsedTime * 10)}</span>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={startTimer} disabled={isRunning}>\r\n          Start\r\n        </button>\r\n        <button onClick={stopTimer} disabled={!isRunning}>\r\n          Stop\r\n        </button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewAjastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}