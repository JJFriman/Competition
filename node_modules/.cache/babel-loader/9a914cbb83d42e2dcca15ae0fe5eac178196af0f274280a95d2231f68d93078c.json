{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\TasksSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksSelector({\n  onSelectTasks\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTaskNames, setSelectedTaskNames] = useState([null, null, null]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/tehtavat').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  }, []);\n  const handleTaskChange = (e, index) => {\n    const taskName = e.target.value;\n    const updatedTaskNames = [...selectedTaskNames];\n    updatedTaskNames[index] = taskName;\n    setSelectedTaskNames(updatedTaskNames);\n    onSelectTasks(updatedTaskNames);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedTaskNames.map((selectedTaskName, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTaskName,\n      onChange: e => handleTaskChange(e, index),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a task\"\n      }, \"default\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: task.tehtävä_nimi,\n        children: task.tehtävä_nimi\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksSelector, \"Q38Q4fs7Oy4q1HVrPjLg4pTeCd0=\");\n_c = TasksSelector;\nexport default TasksSelector;\nvar _c;\n$RefreshReg$(_c, \"TasksSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TasksSelector","onSelectTasks","_s","tasks","setTasks","selectedTaskNames","setSelectedTaskNames","get","then","response","data","catch","error","console","handleTaskChange","e","index","taskName","target","value","updatedTaskNames","children","fileName","_jsxFileName","lineNumber","columnNumber","map","selectedTaskName","onChange","task","tehtävä_nimi","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/TasksSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TasksSelector({ onSelectTasks }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTaskNames, setSelectedTaskNames] = useState([null, null, null]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/api/tehtavat')\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n\r\n  }, []);\r\n\r\n  const handleTaskChange = (e, index) => {\r\n    const taskName = e.target.value;\r\n    const updatedTaskNames = [...selectedTaskNames];\r\n    updatedTaskNames[index] = taskName;\r\n    setSelectedTaskNames(updatedTaskNames);\r\n\r\n    onSelectTasks(updatedTaskNames);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Selector</h2>\r\n      {selectedTaskNames.map((selectedTaskName, index) => (\r\n        <select key={index} value={selectedTaskName} onChange={(e) => handleTaskChange(e, index)}>\r\n          <option key=\"default\" value=\"\">\r\n            Select a task\r\n          </option>\r\n          {tasks.map((task) => (\r\n            <option key={task.id} value={task.tehtävä_nimi}>\r\n              {task.tehtävä_nimi}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksSelector;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAE9EC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFU,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACrC,MAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK;IAC/B,MAAMC,gBAAgB,GAAG,CAAC,GAAGf,iBAAiB,CAAC;IAC/Ce,gBAAgB,CAACJ,KAAK,CAAC,GAAGC,QAAQ;IAClCX,oBAAoB,CAACc,gBAAgB,CAAC;IAEtCnB,aAAa,CAACmB,gBAAgB,CAAC;EACjC,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBpB,iBAAiB,CAACqB,GAAG,CAAC,CAACC,gBAAgB,EAAEX,KAAK,kBAC7CjB,OAAA;MAAoBoB,KAAK,EAAEQ,gBAAiB;MAACC,QAAQ,EAAGb,CAAC,IAAKD,gBAAgB,CAACC,CAAC,EAAEC,KAAK,CAAE;MAAAK,QAAA,gBACvFtB,OAAA;QAAsBoB,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAC;MAE/B,GAFY,SAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAAC,EACRtB,KAAK,CAACuB,GAAG,CAAEG,IAAI,iBACd9B,OAAA;QAAsBoB,KAAK,EAAEU,IAAI,CAACC,YAAa;QAAAT,QAAA,EAC5CQ,IAAI,CAACC;MAAY,GADPD,IAAI,CAACE,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACT,CAAC;IAAA,GARST,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA1CQF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}