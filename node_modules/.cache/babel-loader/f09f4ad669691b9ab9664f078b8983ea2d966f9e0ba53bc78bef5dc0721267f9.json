{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroups, setSelectedGroups] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/selectedGroups').then(response => {\n      const selectedGroupsData = JSON.parse(response.data[0]);\n      setSelectedGroups(selectedGroupsData); // Store the data in state\n      console.log('Selected Groups Data:', selectedGroupsData); // Log the data to the console\n    }).catch(error => {\n      console.error('Error fetching selected groups:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), selectedGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Group \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: group.map((team, teamIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: team.joukkue_nimi\n        }, teamIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"PGFd14tHGVvBlNenWo2cxLLFy/c=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Competition","_s","selectedGroups","setSelectedGroups","get","then","response","selectedGroupsData","JSON","parse","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","index","team","teamIndex","joukkue_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Competition() {\r\n  const [selectedGroups, setSelectedGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8000/api/selectedGroups')\r\n      .then((response) => {\r\n        const selectedGroupsData = JSON.parse(response.data[0]);\r\n        setSelectedGroups(selectedGroupsData); // Store the data in state\r\n        console.log('Selected Groups Data:', selectedGroupsData); // Log the data to the console\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching selected groups:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {selectedGroups.map((group, index) => (\r\n        <div key={index}>\r\n          <h2>Group {index + 1}</h2>\r\n          <ul>\r\n            {group.map((team, teamIndex) => (\r\n              <li key={teamIndex}>{team.joukkue_nimi}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACO,GAAG,CAAC,0CAA0C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MACvDP,iBAAiB,CAACI,kBAAkB,CAAC,CAAC,CAAC;MACvCI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,kBAAkB,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBjB,cAAc,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/BvB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAI,QAAM,EAACO,KAAK,GAAG,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BpB,OAAA;QAAAgB,QAAA,EACGM,KAAK,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,SAAS,kBACzBzB,OAAA;UAAAgB,QAAA,EAAqBQ,IAAI,CAACE;QAAY,GAA7BD,SAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GANGG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CA9BQD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAgCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}