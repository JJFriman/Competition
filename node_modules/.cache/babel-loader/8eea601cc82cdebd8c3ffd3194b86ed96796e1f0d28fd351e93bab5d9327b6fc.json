{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroupData, setSelectedGroupData] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:3002'); // Replace with your WebSocket server URL\n\n    socket.onopen = () => {\n      console.log('WebSocket connection in Competition.js is open.');\n    };\n    socket.onmessage = event => {\n      const receivedData = JSON.parse(event.data);\n      setSelectedGroupData(receivedData);\n      console.log('Data received in Competition.js:', receivedData); // Add this line\n    };\n\n    return () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), selectedGroupData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Group Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(selectedGroupData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected group.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"g5D7+GU72UiP3elj21TcisvCfJM=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Competition","_s","selectedGroupData","setSelectedGroupData","socket","WebSocket","onopen","console","log","onmessage","event","receivedData","JSON","parse","data","readyState","OPEN","close","children","fileName","_jsxFileName","lineNumber","columnNumber","stringify","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Competition() {\r\n  const [selectedGroupData, setSelectedGroupData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:3002'); // Replace with your WebSocket server URL\r\n  \r\n    socket.onopen = () => {\r\n      console.log('WebSocket connection in Competition.js is open.');\r\n    };\r\n  \r\n    socket.onmessage = (event) => {\r\n      const receivedData = JSON.parse(event.data);\r\n      setSelectedGroupData(receivedData);\r\n  \r\n      console.log('Data received in Competition.js:', receivedData); // Add this line\r\n    };\r\n  \r\n    return () => {\r\n      if (socket && socket.readyState === WebSocket.OPEN) {\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {selectedGroupData ? (\r\n        <div>\r\n          <h2>Selected Group Data</h2>\r\n          <pre>{JSON.stringify(selectedGroupData, null, 2)}</pre>\r\n        </div>\r\n      ) : (\r\n        <p>No data available for the selected group.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;;IAErDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAChE,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC3CX,oBAAoB,CAACQ,YAAY,CAAC;MAElCJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEG,YAAY,CAAC,CAAC,CAAC;IACjE,CAAC;;IAED,OAAO,MAAM;MACX,IAAIP,MAAM,IAAIA,MAAM,CAACW,UAAU,KAAKV,SAAS,CAACW,IAAI,EAAE;QAClDZ,MAAM,CAACa,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBpB,iBAAiB,gBAChBH,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BvB,OAAA;QAAAmB,QAAA,EAAMN,IAAI,CAACW,SAAS,CAACrB,iBAAiB,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,gBAENvB,OAAA;MAAAmB,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAtCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}