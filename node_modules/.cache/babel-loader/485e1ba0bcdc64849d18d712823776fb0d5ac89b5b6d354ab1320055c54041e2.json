{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport '../css/Competition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [finishedTimes, setFinishedTimes] = useState({});\n  const [updatedGroupData, setUpdatedGroupData] = useState(null);\n  useEffect(() => {\n    const socket = io('http://localhost:8000');\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\n    });\n    socket.on('groupDataUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\n    });\n    socket.on('finishedTimeUpdate', finishedTimes => {\n      // Handle the finishedTimes object directly\n      console.log('Received finished time update:', finishedTimes);\n\n      // Update the state or perform other actions\n      setFinishedTimes(finishedTimes);\n      console.log('Updated finishedTimes:', finishedTimes);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const storedFinishedTimes = localStorage.getItem('finishedTimes');\n    if (storedFinishedTimes) {\n      const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\n      setFinishedTimes(parsedFinishedTimes);\n      console.log('Parsed Finished Times:', parsedFinishedTimes);\n    }\n  }, []);\n  function formatTime(seconds) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    const formattedTime = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n    return formattedTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), updatedGroupData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: updatedGroupData.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Tasks: \", updatedGroupData.selectedTasks.map(task => `${task.tehtävä_nimi} (${task.max_aika})`).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: updatedGroupData.teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 5\n          }, this), Object.entries(finishedTimes[team.joukkue_id] || {}).map(([era, tasks]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: era\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 5\n            }, this), Object.entries(tasks).map(([taskName, finishedTimeData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Finished Time: \", formatTime(finishedTimeData.finishedTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 9\n              }, this)]\n            }, taskName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 7\n            }, this))]\n          }, era, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 3\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 5\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 3\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"2Cjw4fJiUqIyV0ZzrHaJmYG7b/U=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Competition","_s","selectedGroup","setSelectedGroup","finishedTimes","setFinishedTimes","updatedGroupData","setUpdatedGroupData","socket","on","parsedData","JSON","parse","localStorage","setItem","stringify","console","log","storedSelectedGroup","getItem","connected","disconnect","storedFinishedTimes","parsedFinishedTimes","formatTime","seconds","hours","Math","floor","minutes","secs","formattedTime","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","groupInfo","selectedTasks","map","task","tehtävä_nimi","max_aika","join","teams","team","joukkue_nimi","Object","entries","joukkue_id","era","tasks","taskName","finishedTimeData","finishedTime","jäsenet","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport '../css/Competition.css';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [finishedTimes, setFinishedTimes] = useState({});\r\n  const [updatedGroupData, setUpdatedGroupData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\r\n    });\r\n\r\n    socket.on('groupDataUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\r\n    });\r\n\r\n    socket.on('finishedTimeUpdate', (finishedTimes) => {\r\n      // Handle the finishedTimes object directly\r\n      console.log('Received finished time update:', finishedTimes);\r\n    \r\n      // Update the state or perform other actions\r\n      setFinishedTimes(finishedTimes);\r\n    \r\n      console.log('Updated finishedTimes:', finishedTimes);\r\n    });\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedFinishedTimes = localStorage.getItem('finishedTimes');\r\n    if (storedFinishedTimes) {\r\n      const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\r\n      setFinishedTimes(parsedFinishedTimes);\r\n      console.log('Parsed Finished Times:', parsedFinishedTimes);\r\n    }\r\n  }, []);\r\n\r\n  function formatTime(seconds) {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n  \r\n    const formattedTime = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\r\n    return formattedTime;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {updatedGroupData ? (\r\n        <div>\r\n          <h2>{updatedGroupData.groupInfo}</h2>\r\n          <h3>Selected Tasks: {updatedGroupData.selectedTasks.map((task) => `${task.tehtävä_nimi} (${task.max_aika})`).join(', ')}</h3>\r\n          <ul>\r\n          {updatedGroupData.teams.map((team) => (\r\n  <div key={team.joukkue_id}>\r\n    <h3>{team.joukkue_nimi}</h3>\r\n    {Object.entries(finishedTimes[team.joukkue_id] || {}).map(([era, tasks]) => (\r\n  <div key={era}>\r\n    <h3>{era}</h3>\r\n    {Object.entries(tasks).map(([taskName, finishedTimeData]) => (\r\n      <div key={taskName}>\r\n        <h4>{taskName}</h4>\r\n        <p>Finished Time: {formatTime(finishedTimeData.finishedTime)}</p>\r\n      </div>\r\n    ))}\r\n  </div>\r\n))}\r\n\r\n    <p>Members: {team.jäsenet}</p>\r\n  </div>\r\n))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}