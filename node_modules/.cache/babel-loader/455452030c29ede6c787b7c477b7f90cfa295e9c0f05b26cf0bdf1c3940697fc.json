{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompetitionFetch from './CompetitionFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [groupedTeams, setGroupedTeams] = useState([]);\n  const handleDataFetched = data => {\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\n    const first36Teams = sortedTeams.slice(0, 36);\n    setTeams(first36Teams);\n    divideTeamsIntoGroups(first36Teams);\n  };\n  const divideTeamsIntoGroups = teams => {\n    const grouped = [];\n    for (let i = 0; i < teams.length; i += 9) {\n      grouped.push(teams.slice(i, i + 9));\n    }\n    setGroupedTeams(grouped);\n  };\n  useEffect(() => {\n    // Fetch the data\n  }, []); // Add your data fetching logic here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: groupedTeams.map((group, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: group.map(team => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.joukkue_nimi\n          }, team.joukkue_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompetitionFetch, {\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"FrBMz3Ac88rxc+154bd5asPBbL8=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","CompetitionFetch","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","teams","setTeams","groupedTeams","setGroupedTeams","handleDataFetched","data","sortedTeams","sort","a","b","osallistumis_nro","first36Teams","slice","divideTeamsIntoGroups","grouped","i","length","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","index","team","joukkue_nimi","joukkue_id","onDataFetched","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CompetitionFetch from './CompetitionFetch';\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [groupedTeams, setGroupedTeams] = useState([]);\r\n\r\n  const handleDataFetched = (data) => {\r\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\r\n    const first36Teams = sortedTeams.slice(0, 36);\r\n    setTeams(first36Teams);\r\n    divideTeamsIntoGroups(first36Teams);\r\n  };\r\n\r\n  const divideTeamsIntoGroups = (teams) => {\r\n    const grouped = [];\r\n    for (let i = 0; i < teams.length; i += 9) {\r\n      grouped.push(teams.slice(i, i + 9));\r\n    }\r\n    setGroupedTeams(grouped);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the data\r\n  }, []); // Add your data fetching logic here\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition Alkuerä</h1>\r\n      <table>\r\n        <tbody>\r\n          {groupedTeams.map((group, index) => (\r\n            <tr key={index}>\r\n              {group.map((team) => (\r\n                <td key={team.joukkue_id}>{team.joukkue_nimi}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <CompetitionFetch onDataFetched={handleDataFetched} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,iBAAiB,GAAIC,IAAI,IAAK;IAClC,MAAMC,WAAW,GAAG,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,gBAAgB,GAAGD,CAAC,CAACC,gBAAgB,CAAC;IACrF,MAAMC,YAAY,GAAGL,WAAW,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC7CX,QAAQ,CAACU,YAAY,CAAC;IACtBE,qBAAqB,CAACF,YAAY,CAAC;EACrC,CAAC;EAED,MAAME,qBAAqB,GAAIb,KAAK,IAAK;IACvC,MAAMc,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,KAAK,CAACgB,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACxCD,OAAO,CAACG,IAAI,CAACjB,KAAK,CAACY,KAAK,CAACG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC;IACAZ,eAAe,CAACW,OAAO,CAAC;EAC1B,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEG,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzB,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAAqB,QAAA,EACGhB,YAAY,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC7B5B,OAAA;UAAAqB,QAAA,EACGM,KAAK,CAACD,GAAG,CAAEG,IAAI,iBACd7B,OAAA;YAAAqB,QAAA,EAA2BQ,IAAI,CAACC;UAAY,GAAnCD,IAAI,CAACE,UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyB,CAClD;QAAC,GAHKG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRzB,OAAA,CAACF,gBAAgB;MAACkC,aAAa,EAAEzB;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACvB,EAAA,CAxCQD,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AA0C3B,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}