{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ajastin() {\n  _s();\n  const {\n    teamId\n  } = useParams(); // Access the teamId route parameter\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliseconds, setMilliseconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const socket = io('http://localhost:8000');\n    socket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    socket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, [teamId]);\n  useEffect(() => {\n    let timer;\n    if (isRunning) {\n      timer = setInterval(() => {\n        if (milliseconds === 99) {\n          if (seconds === 59) {\n            setMinutes(prevMinutes => prevMinutes + 1);\n            setSeconds(0);\n          } else {\n            setSeconds(prevSeconds => prevSeconds + 1);\n          }\n          setMilliseconds(0);\n        } else {\n          setMilliseconds(prevMilliseconds => prevMilliseconds + 1);\n        }\n      }, 10);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [isRunning, minutes, seconds, milliseconds]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setMinutes(0);\n    setSeconds(0);\n    setMilliseconds(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Selected Task: ${selectedGroup.selectedTask.tehtävä_nimi}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Aika: \", selectedGroup.selectedTask ? selectedGroup.selectedTask.max_aika : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: minutes < 10 ? `0${minutes}` : minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds < 10 ? `0${seconds}` : seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: milliseconds < 10 ? `0${milliseconds}` : milliseconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Ajastin, \"fDFAdxFiX9nxI3Gm1Qzk75oQ3Xo=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","Ajastin","_s","teamId","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds","isRunning","setIsRunning","selectedGroup","setSelectedGroup","document","title","socket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","timer","setInterval","prevMinutes","prevSeconds","prevMilliseconds","clearInterval","startTimer","stopTimer","resetTimer","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTask","tehtävä_nimi","max_aika","className","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Ajastin() {\r\n  const { teamId } = useParams(); // Access the teamId route parameter\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [milliseconds, setMilliseconds] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning) {\r\n      timer = setInterval(() => {\r\n        if (milliseconds === 99) {\r\n          if (seconds === 59) {\r\n            setMinutes((prevMinutes) => prevMinutes + 1);\r\n            setSeconds(0);\r\n          } else {\r\n            setSeconds((prevSeconds) => prevSeconds + 1);\r\n          }\r\n          setMilliseconds(0);\r\n        } else {\r\n          setMilliseconds((prevMilliseconds) => prevMilliseconds + 1);\r\n        }\r\n      }, 10);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [isRunning, minutes, seconds, milliseconds]);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setMinutes(0);\r\n    setSeconds(0);\r\n    setMilliseconds(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>{`Selected Task: ${selectedGroup.selectedTask.tehtävä_nimi}`}</h3>\r\n          <p>Max Aika: {selectedGroup.selectedTask ? selectedGroup.selectedTask.max_aika : 'N/A'}</p>\r\n        </div>\r\n      )}\r\n      <div className=\"timer\">\r\n        <span>{minutes < 10 ? `0${minutes}` : minutes}</span>:\r\n        <span>{seconds < 10 ? `0${seconds}` : seconds}</span>:\r\n        <span>{milliseconds < 10 ? `0${milliseconds}` : milliseconds}</span>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={startTimer}>Start</button>\r\n        <button onClick={stopTimer}>Stop</button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}