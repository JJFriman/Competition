{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompetitionFetch from './CompetitionFetch';\nimport '../css/CompetitionAlkuerä.css'; // Import the CSS file\nimport { sendSelectedGroupData } from './WebSocketUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [groupedTeams, setGroupedTeams] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection when the component loads\n    const socket = new WebSocket('ws://localhost:3002'); // Replace with the correct WebSocket URL\n\n    socket.onopen = () => {\n      console.log('WebSocket connection is open.');\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection is closed.');\n    };\n    socket.onmessage = event => {\n      // Handle messages received from the WebSocket server (if needed)\n    };\n  }, []);\n  const handleGroupSelection = selectedGroupIndex => {\n    setSelectedGroup(selectedGroupIndex);\n\n    // Prepare the selected group data\n    const selectedGroupData = groupedTeams[selectedGroupIndex]; // Replace with your data structure\n\n    // Send the selected group data to the WebSocket server\n    const socket = new WebSocket('ws://localhost:3002'); // Replace with the correct WebSocket URL\n    socket.onopen = () => {\n      socket.send(JSON.stringify(selectedGroupData));\n      socket.close(); // Close the WebSocket after sending data\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: groupedTeams.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Alkuer\\xE4 \", groupIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGroupSelection(groupIndex),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), group.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: team.joukkue_nimi\n        }, team.joukkue_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))]\n      }, groupIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompetitionFetch, {\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"dI4lHM8FO+8w0Nd4dH1qC56c+us=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","CompetitionFetch","sendSelectedGroupData","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","teams","setTeams","groupedTeams","setGroupedTeams","selectedGroup","setSelectedGroup","socket","WebSocket","onopen","console","log","onclose","onmessage","event","handleGroupSelection","selectedGroupIndex","selectedGroupData","send","JSON","stringify","close","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","group","groupIndex","onClick","team","joukkue_nimi","joukkue_id","onDataFetched","handleDataFetched","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CompetitionFetch from './CompetitionFetch';\r\nimport '../css/CompetitionAlkuerä.css'; // Import the CSS file\r\nimport { sendSelectedGroupData } from './WebSocketUtils';\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [groupedTeams, setGroupedTeams] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the WebSocket connection when the component loads\r\n    const socket = new WebSocket('ws://localhost:3002'); // Replace with the correct WebSocket URL\r\n\r\n    socket.onopen = () => {\r\n      console.log('WebSocket connection is open.');\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log('WebSocket connection is closed.');\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      // Handle messages received from the WebSocket server (if needed)\r\n    };\r\n  }, []);\r\n\r\n  const handleGroupSelection = (selectedGroupIndex) => {\r\n    setSelectedGroup(selectedGroupIndex);\r\n    \r\n    // Prepare the selected group data\r\n    const selectedGroupData = groupedTeams[selectedGroupIndex]; // Replace with your data structure\r\n\r\n    // Send the selected group data to the WebSocket server\r\n    const socket = new WebSocket('ws://localhost:3002'); // Replace with the correct WebSocket URL\r\n    socket.onopen = () => {\r\n      socket.send(JSON.stringify(selectedGroupData));\r\n      socket.close(); // Close the WebSocket after sending data\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition Alkuerä</h1>\r\n      <div className=\"groups-container\">\r\n        {groupedTeams.map((group, groupIndex) => (\r\n          <div key={groupIndex} className=\"group\">\r\n            <h2>Alkuerä {groupIndex + 1}</h2>\r\n            <button onClick={() => handleGroupSelection(groupIndex)}>Select</button>\r\n            {group.map((team) => (\r\n              <div key={team.joukkue_id} className=\"team\">\r\n                {team.joukkue_nimi}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CompetitionFetch onDataFetched={handleDataFetched} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}