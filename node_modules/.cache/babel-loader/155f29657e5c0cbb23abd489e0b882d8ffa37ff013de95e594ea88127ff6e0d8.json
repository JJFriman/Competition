{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [finishedTimes, setFinishedTimes] = useState({});\n  const [updatedGroupData, setUpdatedGroupData] = useState(null); // New state variable\n\n  _s(useEffect(_s(() => {\n    _s();\n    const socket = io('http://localhost:8000');\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData)); // Stringify is done here\n    });\n\n    socket.on('groupDataUpdate', updatedGroupData => {\n      console.log('Received group data update:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData)); // Stringify is done here\n    });\n\n    socket.on('finishedTimeUpdate', finishedTimeData => {\n      console.log('Received finished time data:', finishedTimeData);\n      try {\n        const parsedData = JSON.parse(finishedTimeData);\n        if (parsedData && parsedData.teamId && parsedData.finishedTime) {\n          setFinishedTimes(prevFinishedTimes => ({\n            ...prevFinishedTimes,\n            [parsedData.teamId]: parsedData.finishedTime\n          }));\n\n          // Save finishedTimes to local storage\n          localStorage.setItem('finishedTimes', JSON.stringify({\n            ...finishedTimes,\n            [parsedData.teamId]: parsedData.finishedTime\n          }));\n        } else {\n          console.error('Invalid finished time data:', finishedTimeData);\n        }\n      } catch (error) {\n        console.error('Error parsing finished time data:', error);\n      }\n    });\n    useEffect(() => {\n      const storedFinishedTimes = localStorage.getItem('finishedTimes');\n      if (storedFinishedTimes) {\n        const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\n        setFinishedTimes(parsedFinishedTimes);\n      }\n    }, []);\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  console.log('Finished Times:', finishedTimes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), Object.keys(finishedTimes).map(teamId => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Team ID: \", teamId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Finished Time: \", finishedTimes[teamId]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, teamId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)), updatedGroupData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: updatedGroupData.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Task: \", updatedGroupData.selectedTask ? updatedGroupData.selectedTask.tehtävä_nimi : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Aika: \", updatedGroupData.selectedTask ? updatedGroupData.selectedTask.max_aika : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: updatedGroupData.teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), finishedTimes[team.joukkue_id] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Finished Time: \", finishedTimes[team.joukkue_id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s2(Competition, \"R1ZHzASKDRZWL4rsx65tVHRs42M=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Competition","_s2","_s","$RefreshSig$","selectedGroup","setSelectedGroup","finishedTimes","setFinishedTimes","updatedGroupData","setUpdatedGroupData","socket","on","console","log","parsedData","JSON","parse","localStorage","setItem","stringify","finishedTimeData","teamId","finishedTime","prevFinishedTimes","error","storedFinishedTimes","getItem","parsedFinishedTimes","storedSelectedGroup","connected","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","groupInfo","selectedTask","tehtävä_nimi","max_aika","teams","team","joukkue_nimi","jäsenet","joukkue_id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [finishedTimes, setFinishedTimes] = useState({});\r\n  const [updatedGroupData, setUpdatedGroupData] = useState(null); // New state variable\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData)); // Stringify is done here\r\n    });\r\n    \r\n    socket.on('groupDataUpdate', (updatedGroupData) => {\r\n      console.log('Received group data update:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData)); // Stringify is done here\r\n    });\r\n    \r\n    \r\n\r\n    socket.on('finishedTimeUpdate', (finishedTimeData) => {\r\n      console.log('Received finished time data:', finishedTimeData);\r\n      try {\r\n        const parsedData = JSON.parse(finishedTimeData);\r\n    \r\n        if (parsedData && parsedData.teamId && parsedData.finishedTime) {\r\n          setFinishedTimes((prevFinishedTimes) => ({\r\n            ...prevFinishedTimes,\r\n            [parsedData.teamId]: parsedData.finishedTime,\r\n          }));\r\n    \r\n          // Save finishedTimes to local storage\r\n          localStorage.setItem('finishedTimes', JSON.stringify({\r\n            ...finishedTimes,\r\n            [parsedData.teamId]: parsedData.finishedTime,\r\n          }));\r\n        } else {\r\n          console.error('Invalid finished time data:', finishedTimeData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing finished time data:', error);\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n  const storedFinishedTimes = localStorage.getItem('finishedTimes');\r\n  if (storedFinishedTimes) {\r\n    const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\r\n    setFinishedTimes(parsedFinishedTimes);\r\n  }\r\n}, []);\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  console.log('Finished Times:', finishedTimes);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {Object.keys(finishedTimes).map((teamId) => (\r\n        <li key={teamId}>\r\n          <h3>Team ID: {teamId}</h3>\r\n          <p>Finished Time: {finishedTimes[teamId]}</p>\r\n        </li>\r\n      ))}\r\n      {updatedGroupData ? (\r\n        <div>\r\n          <h2>{updatedGroupData.groupInfo}</h2>\r\n          <h3>Selected Task: {updatedGroupData.selectedTask ? updatedGroupData.selectedTask.tehtävä_nimi : 'None'}</h3>\r\n          <p>Max Aika: {updatedGroupData.selectedTask ? updatedGroupData.selectedTask.max_aika : 'N/A'}</p>\r\n  \r\n          <ul>\r\n            {updatedGroupData.teams.map((team) => (\r\n              <li key={team.joukkue_id}>\r\n                <h3>{team.joukkue_nimi}</h3>\r\n                <p>Members: {team.jäsenet}</p>\r\n                {finishedTimes[team.joukkue_id] && (\r\n                  <p>Finished Time: {finishedTimes[team.joukkue_id]}</p>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}