{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\TasksSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksSelector({\n  onSelectTasks\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTaskIds, setSelectedTaskIds] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/tehtavat').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n    const storedSelectedTaskIds = localStorage.getItem('selectedTaskIds');\n    if (storedSelectedTaskIds) {\n      setSelectedTaskIds(JSON.parse(storedSelectedTaskIds));\n    }\n  }, []);\n  const handleTaskChange = e => {\n    const taskId = e.target.value;\n\n    // Ensure the task is not already selected\n    if (!selectedTaskIds.includes(taskId)) {\n      const newSelectedTaskIds = [...selectedTaskIds, taskId];\n\n      // Limit the selection to three tasks\n      const limitedSelectedTaskIds = newSelectedTaskIds.slice(-3);\n      onSelectTasks(limitedSelectedTaskIds);\n      setSelectedTaskIds(limitedSelectedTaskIds);\n      localStorage.setItem('selectedTaskIds', JSON.stringify(limitedSelectedTaskIds));\n    } else {\n      console.error('Task already selected:', taskId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: selectedTaskIds,\n      onChange: handleTaskChange,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: task.id,\n        children: task.tehtävä_nimi\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksSelector, \"wU7dGNAqPYcCyEaO6iu25g+IwnY=\");\n_c = TasksSelector;\nexport default TasksSelector;\nvar _c;\n$RefreshReg$(_c, \"TasksSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TasksSelector","onSelectTasks","_s","tasks","setTasks","selectedTaskIds","setSelectedTaskIds","get","then","response","data","catch","error","console","storedSelectedTaskIds","localStorage","getItem","JSON","parse","handleTaskChange","e","taskId","target","value","includes","newSelectedTaskIds","limitedSelectedTaskIds","slice","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","multiple","onChange","map","task","id","tehtävä_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/TasksSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TasksSelector({ onSelectTasks }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTaskIds, setSelectedTaskIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/api/tehtavat')\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n\r\n    const storedSelectedTaskIds = localStorage.getItem('selectedTaskIds');\r\n    if (storedSelectedTaskIds) {\r\n      setSelectedTaskIds(JSON.parse(storedSelectedTaskIds));\r\n    }\r\n  }, []);\r\n\r\n  const handleTaskChange = (e) => {\r\n    const taskId = e.target.value;\r\n\r\n    // Ensure the task is not already selected\r\n    if (!selectedTaskIds.includes(taskId)) {\r\n      const newSelectedTaskIds = [...selectedTaskIds, taskId];\r\n\r\n      // Limit the selection to three tasks\r\n      const limitedSelectedTaskIds = newSelectedTaskIds.slice(-3);\r\n\r\n      onSelectTasks(limitedSelectedTaskIds);\r\n      setSelectedTaskIds(limitedSelectedTaskIds);\r\n      localStorage.setItem('selectedTaskIds', JSON.stringify(limitedSelectedTaskIds));\r\n    } else {\r\n      console.error('Task already selected:', taskId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Selector</h2>\r\n      <select\r\n        multiple\r\n        value={selectedTaskIds}\r\n        onChange={handleTaskChange}\r\n      >\r\n        {tasks.map((task) => (\r\n          <option key={task.id} value={task.id}>\r\n            {task.tehtävä_nimi}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFU,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;IAEJ,MAAME,qBAAqB,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACrE,IAAIF,qBAAqB,EAAE;MACzBR,kBAAkB,CAACW,IAAI,CAACC,KAAK,CAACJ,qBAAqB,CAAC,CAAC;IACvD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;;IAE7B;IACA,IAAI,CAAClB,eAAe,CAACmB,QAAQ,CAACH,MAAM,CAAC,EAAE;MACrC,MAAMI,kBAAkB,GAAG,CAAC,GAAGpB,eAAe,EAAEgB,MAAM,CAAC;;MAEvD;MACA,MAAMK,sBAAsB,GAAGD,kBAAkB,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;MAE3D1B,aAAa,CAACyB,sBAAsB,CAAC;MACrCpB,kBAAkB,CAACoB,sBAAsB,CAAC;MAC1CX,YAAY,CAACa,OAAO,CAAC,iBAAiB,EAAEX,IAAI,CAACY,SAAS,CAACH,sBAAsB,CAAC,CAAC;IACjF,CAAC,MAAM;MACLb,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAES,MAAM,CAAC;IACjD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnC,OAAA;MACEoC,QAAQ;MACRZ,KAAK,EAAElB,eAAgB;MACvB+B,QAAQ,EAAEjB,gBAAiB;MAAAW,QAAA,EAE1B3B,KAAK,CAACkC,GAAG,CAAEC,IAAI,iBACdvC,OAAA;QAAsBwB,KAAK,EAAEe,IAAI,CAACC,EAAG;QAAAT,QAAA,EAClCQ,IAAI,CAACE;MAAY,GADPF,IAAI,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChC,EAAA,CAtDQF,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAwDtB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}