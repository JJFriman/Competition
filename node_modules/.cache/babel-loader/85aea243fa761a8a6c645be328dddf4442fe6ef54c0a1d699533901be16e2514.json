{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompetitionFetch from './CompetitionFetch';\nimport '../css/CompetitionAlkuerä.css';\nimport { io } from 'socket.io-client'; // Import the io function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [groupedTeams, setGroupedTeams] = useState([]);\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState(null); // Track selected group index\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection when the component mounts\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    setSocket(newSocket);\n    return () => {\n      // Close the WebSocket connection when the component unmounts\n      if (newSocket && newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, []);\n  const handleDataFetched = data => {\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\n    const first36Teams = sortedTeams.slice(0, 36);\n    setTeams(first36Teams);\n    divideTeamsIntoGroups(first36Teams);\n  };\n  const divideTeamsIntoGroups = teams => {\n    const grouped = [];\n    for (let i = 0; i < teams.length; i += 6) {\n      grouped.push(teams.slice(i, i + 6));\n    }\n    setGroupedTeams(grouped);\n  };\n  const handleGroupSelection = selectedGroupIndex => {\n    if (selectedGroupIndex === selectedGroupIndex) {\n      // If the selected group is the same, unselect it\n      setSelectedGroupIndex(null);\n      if (socket && socket.connected) {\n        // Send an \"Unselect\" message if connected to a socket\n        socket.emit('selectedGroup', 'Unselect');\n      }\n    } else {\n      // If a different group is selected, update the selected group\n      setSelectedGroupInde(selectedGroupIndex);\n      if (socket && socket.connected) {\n        const selectedGroupData = groupedTeams[selectedGroupIndex];\n        const jsonData = JSON.stringify(selectedGroupData);\n        console.log('Sending selected group data:', jsonData);\n        socket.emit('selectedGroup', jsonData);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: groupedTeams.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `group ${selectedGroup === groupIndex ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Alkuer\\xE4 \", groupIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGroupSelection(groupIndex),\n          children: selectedGroup === groupIndex ? 'Unselect' : 'Select'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), group.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: team.joukkue_nimi\n        }, team.joukkue_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))]\n      }, groupIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompetitionFetch, {\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"5voQHQiBGIA5QcnmKMHKJ7ITS70=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","CompetitionFetch","io","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","teams","setTeams","groupedTeams","setGroupedTeams","selectedGroupIndex","setSelectedGroupIndex","socket","setSocket","newSocket","on","console","log","connected","disconnect","handleDataFetched","data","sortedTeams","sort","a","b","osallistumis_nro","first36Teams","slice","divideTeamsIntoGroups","grouped","i","length","push","handleGroupSelection","emit","setSelectedGroupInde","selectedGroupData","jsonData","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","group","groupIndex","selectedGroup","onClick","team","joukkue_nimi","joukkue_id","onDataFetched","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CompetitionFetch from './CompetitionFetch';\r\nimport '../css/CompetitionAlkuerä.css';\r\nimport { io } from 'socket.io-client'; // Import the io function\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [groupedTeams, setGroupedTeams] = useState([]);\r\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState(null); // Track selected group index\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the WebSocket connection when the component mounts\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      // Close the WebSocket connection when the component unmounts\r\n      if (newSocket && newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleDataFetched = (data) => {\r\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\r\n    const first36Teams = sortedTeams.slice(0, 36);\r\n    setTeams(first36Teams);\r\n    divideTeamsIntoGroups(first36Teams);\r\n  };\r\n\r\n  const divideTeamsIntoGroups = (teams) => {\r\n    const grouped = [];\r\n    for (let i = 0; i < teams.length; i += 6) {\r\n      grouped.push(teams.slice(i, i + 6));\r\n    }\r\n    setGroupedTeams(grouped);\r\n  };\r\n\r\n  const handleGroupSelection = (selectedGroupIndex) => {\r\n    if (selectedGroupIndex === selectedGroupIndex) {\r\n      // If the selected group is the same, unselect it\r\n      setSelectedGroupIndex(null);\r\n      if (socket && socket.connected) {\r\n        // Send an \"Unselect\" message if connected to a socket\r\n        socket.emit('selectedGroup', 'Unselect');\r\n      }\r\n    } else {\r\n      // If a different group is selected, update the selected group\r\n      setSelectedGroupInde(selectedGroupIndex);\r\n      if (socket && socket.connected) {\r\n        const selectedGroupData = groupedTeams[selectedGroupIndex];\r\n        const jsonData = JSON.stringify(selectedGroupData);\r\n        console.log('Sending selected group data:', jsonData);\r\n        socket.emit('selectedGroup', jsonData);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition Alkuerä</h1>\r\n      <div className=\"groups-container\">\r\n        {groupedTeams.map((group, groupIndex) => (\r\n          <div key={groupIndex} className={`group ${selectedGroup === groupIndex ? 'selected' : ''}`}>\r\n            <h2>Alkuerä {groupIndex + 1}</h2>\r\n            <button onClick={() => handleGroupSelection(groupIndex)}>\r\n              {selectedGroup === groupIndex ? 'Unselect' : 'Select'}\r\n            </button>\r\n            {group.map((team) => (\r\n              <div key={team.joukkue_id} className=\"team\">\r\n                {team.joukkue_nimi}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CompetitionFetch onDataFetched={handleDataFetched} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}