{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\NewAjastinChild.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst NewAjastinChild = () => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const intervalIdRef = useRef(null);\n  useEffect(() => {\n    const startTimerHandler = () => {\n      console.log('Received start timer event');\n      setStartTime(new Date()); // Log the start time\n      setIsRunning(true);\n    };\n    const stopTimerHandler = () => {\n      console.log('Received stop timer event');\n      setIsRunning(false);\n      if (startTime) {\n        const endTime = new Date();\n        const timeDifference = endTime - startTime;\n        console.log('Timer ran for:', timeDifference, 'milliseconds');\n      }\n    };\n\n    // Listen for timerStart event from the server\n    socket.on('timerStart', startTimerHandler);\n\n    // Listen for stopTimer event from the server\n    socket.on('stopTimer', stopTimerHandler);\n    return () => {\n      // Clean up event listeners when the component unmounts\n      socket.off('timerStart', startTimerHandler);\n      socket.off('stopTimer', stopTimerHandler);\n    };\n  }, [startTime]); // Include startTime in the dependency array\n\n  useEffect(() => {\n    if (isRunning) {\n      const intervalId = setInterval(() => {\n        setElapsedTime(prevElapsedTime => prevElapsedTime + 1);\n      }, 10);\n      intervalIdRef.current = intervalId;\n    } else {\n      clearInterval(intervalIdRef.current);\n    }\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, [isRunning, elapsedTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(elapsedTime * 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to format time (similar to your existing formatTime function)\n_s(NewAjastinChild, \"0C/6DEyKvl7bFHGDxwLSHW2FH98=\");\n_c = NewAjastinChild;\nconst formatTime = milliseconds => {\n  const totalSeconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(totalSeconds / 60);\n  const remainingSeconds = totalSeconds % 60;\n  const hundredths = Math.floor(milliseconds % 1000 / 10);\n  return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n};\nexport default NewAjastinChild;\nvar _c;\n$RefreshReg$(_c, \"NewAjastinChild\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","NewAjastinChild","_s","elapsedTime","setElapsedTime","isRunning","setIsRunning","startTime","setStartTime","intervalIdRef","startTimerHandler","console","log","Date","stopTimerHandler","endTime","timeDifference","on","off","intervalId","setInterval","prevElapsedTime","current","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","formatTime","_c","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","String","padStart","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/NewAjastinChild.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst NewAjastinChild = () => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const intervalIdRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const startTimerHandler = () => {\r\n      console.log('Received start timer event');\r\n      setStartTime(new Date()); // Log the start time\r\n      setIsRunning(true);\r\n    };\r\n\r\n    const stopTimerHandler = () => {\r\n      console.log('Received stop timer event');\r\n      setIsRunning(false);\r\n\r\n      if (startTime) {\r\n        const endTime = new Date();\r\n        const timeDifference = endTime - startTime;\r\n        console.log('Timer ran for:', timeDifference, 'milliseconds');\r\n      }\r\n    };\r\n\r\n    // Listen for timerStart event from the server\r\n    socket.on('timerStart', startTimerHandler);\r\n\r\n    // Listen for stopTimer event from the server\r\n    socket.on('stopTimer', stopTimerHandler);\r\n\r\n    return () => {\r\n      // Clean up event listeners when the component unmounts\r\n      socket.off('timerStart', startTimerHandler);\r\n      socket.off('stopTimer', stopTimerHandler);\r\n    };\r\n  }, [startTime]); // Include startTime in the dependency array\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      const intervalId = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1);\r\n      }, 10);\r\n      intervalIdRef.current = intervalId;\r\n    } else {\r\n      clearInterval(intervalIdRef.current);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, [isRunning, elapsedTime]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Task Timer</h3>\r\n      <div className=\"timer\">\r\n        <span>{formatTime(elapsedTime * 10)}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Function to format time (similar to your existing formatTime function)\r\nconst formatTime = (milliseconds) => {\r\n  const totalSeconds = Math.floor(milliseconds / 1000);\r\n  const minutes = Math.floor(totalSeconds / 60);\r\n  const remainingSeconds = totalSeconds % 60;\r\n  const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n\r\n  return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n};\r\n\r\nexport default NewAjastinChild;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}