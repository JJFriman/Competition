{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\NewAjastinGranChild.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewAjastinGranChild = () => {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    setSocket(newSocket);\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(AjastinKello, {\n            teamId: teamId,\n            era: selectedGroup.groupInfo,\n            task: task,\n            maxAika: task.max_aika * 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, task.tehtävä_nimi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(NewAjastinGranChild, \"RRFl5cq5dlO1oGquxO/0ypv+9V8=\", false, function () {\n  return [useParams];\n});\n_c = NewAjastinGranChild;\nexport default NewAjastinGranChild;\nvar _c;\n$RefreshReg$(_c, \"NewAjastinGranChild\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","NewAjastinGranChild","_s","teamId","selectedGroup","setSelectedGroup","socket","setSocket","document","title","newSocket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTasks","map","task","AjastinKello","era","groupInfo","maxAika","max_aika","tehtävä_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/NewAjastinGranChild.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst NewAjastinGranChild = () => {\r\n\r\n    const { teamId } = useParams();\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n    const [socket, setSocket] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      document.title = `Team ${teamId}`;\r\n      const newSocket = io('http://localhost:8000');\r\n  \r\n      newSocket.on('connect', () => {\r\n        console.log('WebSocket connection is open.');\r\n      });\r\n  \r\n      newSocket.on('disconnect', () => {\r\n        console.log('WebSocket connection is closed.');\r\n      });\r\n  \r\n      newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n        console.log('Received updated group data:', updatedGroupData);\r\n        const parsedData = JSON.parse(updatedGroupData);\r\n        setSelectedGroup(parsedData);\r\n  \r\n        localStorage.setItem('selectedGroup', updatedGroupData);\r\n      });\r\n  \r\n      const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n      if (storedSelectedGroup) {\r\n        const parsedData = JSON.parse(storedSelectedGroup);\r\n        setSelectedGroup(parsedData);\r\n      }\r\n  \r\n      setSocket(newSocket);\r\n  \r\n      return () => {\r\n        if (newSocket.connected) {\r\n          newSocket.disconnect();\r\n        }\r\n      };\r\n    }, [teamId]);\r\n  \r\n    return (\r\n      <div>\r\n        <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n        {selectedGroup && (\r\n          <div>\r\n            <h3>Selected Tasks:</h3>\r\n            <ul>\r\n              {selectedGroup.selectedTasks.map((task) => (\r\n                <li key={task.tehtävä_nimi}>\r\n                    <AjastinKello teamId={teamId} era={selectedGroup.groupInfo} task={task} maxAika={task.max_aika * 100}   />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default NewAjastinGranChild;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}