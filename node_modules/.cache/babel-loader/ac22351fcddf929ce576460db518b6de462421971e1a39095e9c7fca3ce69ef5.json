{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport TasksSelector from './TasksSelector';\nimport { sendSelectedGroupData } from './WebSocketUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const socket = io('http://localhost:8000');\n  useEffect(() => {\n    document.title = 'Alkuerä';\n    socket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    socket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      setSelectedGroup(updatedGroupData);\n      localStorage.setItem('selectedGroup', JSON.stringify(updatedGroupData));\n    });\n\n    // Adding this to handle task updates\n    socket.on('selectedTaskUpdate', updatedTaskData => {\n      console.log('Received updated task data:', updatedTaskData);\n      setSelectedTask(updatedTaskData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, [socket]);\n  const handleTaskSelect = task => {\n    console.log('Selected Task:', task);\n    if (task && task.id) {\n      const selectedGroupData = {\n        groupInfo: selectedGroup.groupInfo,\n        teams: selectedGroup.teams,\n        selectedTask: {\n          id: task.id,\n          tehtävä_nimi: task.tehtävä_nimi,\n          max_aika: task.max_aika\n        }\n      };\n      setSelectedTask(selectedGroupData.selectedTask);\n      sendSelectedGroupData(selectedGroupData);\n    } else {\n      console.error('Invalid task object:', task);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Selected Task: \", selectedTask ? selectedTask.tehtävä_nimi : 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), selectedGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedGroup.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TasksSelector, {\n        onSelectTask: handleTaskSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"/61ecK8kH6kOlGPXEeQRqnwbmhM=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","TasksSelector","sendSelectedGroupData","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","selectedGroup","setSelectedGroup","selectedTask","setSelectedTask","socket","document","title","on","console","log","updatedGroupData","localStorage","setItem","JSON","stringify","updatedTaskData","storedSelectedGroup","getItem","parsedData","parse","connected","disconnect","handleTaskSelect","task","id","selectedGroupData","groupInfo","teams","tehtävä_nimi","max_aika","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","team","joukkue_nimi","jäsenet","joukkue_id","onSelectTask","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport TasksSelector from './TasksSelector';\r\nimport { sendSelectedGroupData } from './WebSocketUtils';\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n  const socket = io('http://localhost:8000');\r\n\r\n  useEffect(() => {\r\n    document.title = 'Alkuerä';\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      setSelectedGroup(updatedGroupData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(updatedGroupData));\r\n    });\r\n\r\n    // Adding this to handle task updates\r\n    socket.on('selectedTaskUpdate', (updatedTaskData) => {\r\n      console.log('Received updated task data:', updatedTaskData);\r\n      setSelectedTask(updatedTaskData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleTaskSelect = (task) => {\r\n    console.log('Selected Task:', task);\r\n    if (task && task.id) {\r\n      const selectedGroupData = {\r\n        groupInfo: selectedGroup.groupInfo,\r\n        teams: selectedGroup.teams,\r\n        selectedTask: {\r\n          id: task.id,\r\n          tehtävä_nimi: task.tehtävä_nimi,\r\n          max_aika: task.max_aika,\r\n        },\r\n      };\r\n      setSelectedTask(selectedGroupData.selectedTask);\r\n      sendSelectedGroupData(selectedGroupData);\r\n    } else {\r\n      console.error('Invalid task object:', task);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Alkuerä</h1>\r\n      <h3>Selected Task: {selectedTask ? selectedTask.tehtävä_nimi : 'None'}</h3>\r\n      {selectedGroup ? (\r\n        <div>\r\n          <h2>{selectedGroup.groupInfo}</h2>\r\n\r\n          <ul>\r\n            {selectedGroup.teams.map((team) => (\r\n              <li key={team.joukkue_id}>\r\n                <h3>{team.joukkue_nimi}</h3>\r\n                <p>Members: {team.jäsenet}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {/* Pass onSelectTask to TasksSelector */}\r\n          <TasksSelector onSelectTask={handleTaskSelect} />\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}