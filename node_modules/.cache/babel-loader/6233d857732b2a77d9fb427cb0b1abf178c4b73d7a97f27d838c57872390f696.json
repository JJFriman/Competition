{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ajastin() {\n  _s();\n  const {\n    teamId\n  } = useParams(); // Access the teamId route parameter\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliseconds, setMilliseconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    let timer;\n    if (isRunning) {\n      timer = setInterval(() => {\n        if (milliseconds === 99) {\n          if (seconds === 59) {\n            setMinutes(prevMinutes => prevMinutes + 1);\n            setSeconds(0);\n          } else {\n            setSeconds(prevSeconds => prevSeconds + 1);\n          }\n          setMilliseconds(0);\n        } else {\n          setMilliseconds(prevMilliseconds => prevMilliseconds + 1);\n        }\n      }, 10);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [isRunning, minutes, seconds, milliseconds]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setMinutes(0);\n    setSeconds(0);\n    setMilliseconds(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: minutes < 10 ? `0${minutes}` : minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds < 10 ? `0${seconds}` : seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: milliseconds < 10 ? `0${milliseconds}` : milliseconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Ajastin, \"8c4XCQb0AZ/feEjNeldfQf7NadQ=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Ajastin","_s","teamId","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds","isRunning","setIsRunning","timer","setInterval","prevMinutes","prevSeconds","prevMilliseconds","clearInterval","startTimer","stopTimer","resetTimer","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Ajastin() {\r\n  const { teamId } = useParams(); // Access the teamId route parameter\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [milliseconds, setMilliseconds] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n\r\n    if (isRunning) {\r\n      timer = setInterval(() => {\r\n        if (milliseconds === 99) {\r\n          if (seconds === 59) {\r\n            setMinutes((prevMinutes) => prevMinutes + 1);\r\n            setSeconds(0);\r\n          } else {\r\n            setSeconds((prevSeconds) => prevSeconds + 1);\r\n          }\r\n          setMilliseconds(0);\r\n        } else {\r\n          setMilliseconds((prevMilliseconds) => prevMilliseconds + 1);\r\n        }\r\n      }, 10);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [isRunning, minutes, seconds, milliseconds]);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setMinutes(0);\r\n    setSeconds(0);\r\n    setMilliseconds(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2> {/* Use teamId in the title */}\r\n      <div className=\"timer\">\r\n        <span>{minutes < 10 ? `0${minutes}` : minutes}</span>:\r\n        <span>{seconds < 10 ? `0${seconds}` : seconds}</span>:\r\n        <span>{milliseconds < 10 ? `0${milliseconds}` : milliseconds}</span>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={startTimer}>Start</button>\r\n        <button onClick={stopTimer}>Stop</button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ajastin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK;IAET,IAAIF,SAAS,EAAE;MACbE,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxB,IAAIL,YAAY,KAAK,EAAE,EAAE;UACvB,IAAIF,OAAO,KAAK,EAAE,EAAE;YAClBD,UAAU,CAAES,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;YAC5CP,UAAU,CAAC,CAAC,CAAC;UACf,CAAC,MAAM;YACLA,UAAU,CAAEQ,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;UAC9C;UACAN,eAAe,CAAC,CAAC,CAAC;QACpB,CAAC,MAAM;UACLA,eAAe,CAAEO,gBAAgB,IAAKA,gBAAgB,GAAG,CAAC,CAAC;QAC7D;MACF,CAAC,EAAE,EAAE,CAAC;IACR;IAEA,OAAO,MAAM;MACXC,aAAa,CAACL,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACF,SAAS,EAAEN,OAAO,EAAEE,OAAO,EAAEE,YAAY,CAAC,CAAC;EAE/C,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvBP,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtBR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBT,YAAY,CAAC,KAAK,CAAC;IACnBN,UAAU,CAAC,CAAC,CAAC;IACbE,UAAU,CAAC,CAAC,CAAC;IACbE,eAAe,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACET,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAM,QAAOlB,MAAO;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eACtCzB,OAAA;MAAK0B,SAAS,EAAC,OAAO;MAAAL,QAAA,gBACpBrB,OAAA;QAAAqB,QAAA,EAAOjB,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAGA;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KACrD,eAAAzB,OAAA;QAAAqB,QAAA,EAAOf,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAGA;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KACrD,eAAAzB,OAAA;QAAAqB,QAAA,EAAOb,YAAY,GAAG,EAAE,GAAI,IAAGA,YAAa,EAAC,GAAGA;MAAY;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNzB,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAL,QAAA,gBACvBrB,OAAA;QAAQ2B,OAAO,EAAET,UAAW;QAAAG,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3CzB,OAAA;QAAQ2B,OAAO,EAAER,SAAU;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCzB,OAAA;QAAQ2B,OAAO,EAAEP,UAAW;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA7DQD,OAAO;EAAA,QACKH,SAAS;AAAA;AAAA8B,EAAA,GADrB3B,OAAO;AA+DhB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}