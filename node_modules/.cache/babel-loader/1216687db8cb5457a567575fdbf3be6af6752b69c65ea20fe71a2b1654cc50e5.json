{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ajastin() {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const [elapsedTimes, setElapsedTimes] = useState({});\n  const [isRunning, setIsRunning] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    setSocket(newSocket);\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  useEffect(() => {\n    const timers = {};\n    selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.selectedTasks.forEach(task => {\n      timers[task.tehtävä_nimi] = {\n        elapsedTime: 0,\n        intervalId: null\n      };\n    });\n    setElapsedTimes(timers);\n    return () => {\n      Object.values(timers).forEach(timer => clearInterval(timer.intervalId));\n    };\n  }, [selectedGroup]);\n  useEffect(() => {\n    const timers = {};\n    selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.selectedTasks.forEach(task => {\n      timers[task.tehtävä_nimi] = {\n        elapsedTime: 0,\n        intervalId: null\n      };\n    });\n    setElapsedTimes(timers);\n    return () => {\n      Object.values(timers).forEach(timer => clearInterval(timer.intervalId));\n    };\n  }, [selectedGroup]);\n  const startTimer = taskName => {\n    setIsRunning(true);\n  };\n  const stopTimer = taskName => {\n    setIsRunning(false);\n  };\n  const resetTimer = taskName => {\n    const newElapsedTimes = {\n      ...elapsedTimes,\n      [taskName]: {\n        elapsedTime: 0,\n        intervalId: null\n      }\n    };\n    setElapsedTimes(newElapsedTimes);\n    setIsRunning(false);\n  };\n  const formatTime = timeInMilliseconds => {\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\n    const seconds = Math.floor(timeInMilliseconds % (60 * 100) / 100);\n    const milliseconds = timeInMilliseconds % 100;\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTasks.map(task => {\n          var _elapsedTimes$task$te;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [task.tehtävä_nimi, \": \", formatTime(task.max_aika * 100), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(((_elapsedTimes$task$te = elapsedTimes[task.tehtävä_nimi]) === null || _elapsedTimes$task$te === void 0 ? void 0 : _elapsedTimes$task$te.elapsedTime) * 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startTimer(task.tehtävä_nimi),\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => stopTimer(task.tehtävä_nimi),\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => resetTimer(task.tehtävä_nimi),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, task.tehtävä_nimi, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Ajastin, \"XgX7UWWv1Uh4Lqjcom2oLdA2fNI=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","Ajastin","_s","teamId","elapsedTimes","setElapsedTimes","isRunning","setIsRunning","selectedGroup","setSelectedGroup","socket","setSocket","document","title","newSocket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","timers","selectedTasks","forEach","task","tehtävä_nimi","elapsedTime","intervalId","Object","values","timer","clearInterval","startTimer","taskName","stopTimer","resetTimer","newElapsedTimes","formatTime","timeInMilliseconds","minutes","Math","floor","seconds","milliseconds","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_elapsedTimes$task$te","max_aika","className","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Ajastin() {\r\n  const { teamId } = useParams();\r\n  const [elapsedTimes, setElapsedTimes] = useState({});\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      if (newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  useEffect(() => {\r\n    const timers = {};\r\n    selectedGroup?.selectedTasks.forEach((task) => {\r\n      timers[task.tehtävä_nimi] = {\r\n        elapsedTime: 0,\r\n        intervalId: null,\r\n      };\r\n    });\r\n    setElapsedTimes(timers);\r\n\r\n    return () => {\r\n      Object.values(timers).forEach((timer) => clearInterval(timer.intervalId));\r\n    };\r\n  }, [selectedGroup]);\r\n\r\n  useEffect(() => {\r\n    const timers = {};\r\n    selectedGroup?.selectedTasks.forEach((task) => {\r\n      timers[task.tehtävä_nimi] = {\r\n        elapsedTime: 0,\r\n        intervalId: null,\r\n      };\r\n    });\r\n    setElapsedTimes(timers);\r\n  \r\n    return () => {\r\n      Object.values(timers).forEach((timer) => clearInterval(timer.intervalId));\r\n    };\r\n  }, [selectedGroup]);\r\n\r\nconst startTimer = (taskName) => {\r\n  setIsRunning(true);\r\n};\r\n\r\nconst stopTimer = (taskName) => {\r\n  setIsRunning(false);\r\n};\r\n\r\nconst resetTimer = (taskName) => {\r\n  const newElapsedTimes = {\r\n    ...elapsedTimes,\r\n    [taskName]: {\r\n      elapsedTime: 0,\r\n      intervalId: null,\r\n    },\r\n  };\r\n  setElapsedTimes(newElapsedTimes);\r\n  setIsRunning(false);\r\n};\r\n\r\n  const formatTime = (timeInMilliseconds) => {\r\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\r\n    const seconds = Math.floor((timeInMilliseconds % (60 * 100)) / 100);\r\n    const milliseconds = timeInMilliseconds % 100;\r\n\r\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>Selected Tasks:</h3>\r\n          <ul>\r\n            {selectedGroup.selectedTasks.map((task) => (\r\n              <li key={task.tehtävä_nimi}>\r\n                {task.tehtävä_nimi}: {formatTime(task.max_aika * 100)}\r\n                <div className=\"timer\">\r\n                  <span>{formatTime(elapsedTimes[task.tehtävä_nimi]?.elapsedTime * 10)}</span>\r\n                </div>\r\n                <div className=\"controls\">\r\n                  <button onClick={() => startTimer(task.tehtävä_nimi)}>Start</button>\r\n                  <button onClick={() => stopTimer(task.tehtävä_nimi)}>Stop</button>\r\n                  <button onClick={() => resetTimer(task.tehtävä_nimi)}>Reset</button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}