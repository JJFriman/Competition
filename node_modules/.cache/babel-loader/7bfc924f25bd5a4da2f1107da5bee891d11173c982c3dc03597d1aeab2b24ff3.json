{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\CompetitionAlkuer\\xE4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompetitionFetch from './CompetitionFetch';\nimport classNames from 'classnames'; // Import the classNames library\nimport '../css/CompetitionAlkuerä.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompetitionAlkuerä() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [groupedTeams, setGroupedTeams] = useState([]);\n\n  // State to track the state (aloitus or lopetus) of each group\n  const [groupStates, setGroupStates] = useState([]);\n  const handleDataFetched = data => {\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\n    const first36Teams = sortedTeams.slice(0, 36);\n    setTeams(first36Teams);\n    divideTeamsIntoGroups(first36Teams);\n  };\n  const divideTeamsIntoGroups = teams => {\n    const grouped = teams.reduce((result, team, index) => {\n      const groupIndex = Math.floor(index / 6);\n      if (!result[groupIndex]) {\n        result[groupIndex] = {\n          name: `Alkuerä ${groupIndex + 1}`,\n          teams: [],\n          state: 'aloitus' // Initialize the state to 'aloitus'\n        };\n      }\n\n      result[groupIndex].teams.push(team);\n      return result;\n    }, []);\n    setGroupStates(grouped.map(() => 'aloitus')); // Initialize group states\n    setGroupedTeams(grouped);\n  };\n\n  // Function to toggle the state of a group\n  const toggleGroupState = groupIndex => {\n    setGroupStates(prevGroupStates => {\n      const updatedStates = [...prevGroupStates];\n      updatedStates[groupIndex] = prevGroupStates[groupIndex] === 'aloitus' ? 'lopetus' : 'aloitus';\n      return updatedStates;\n    });\n  };\n  useEffect(() => {\n    // ...\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition Alkuer\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: groupedTeams.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames('group', groupStates[groupIndex].toLowerCase()) // Apply class based on state\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleGroupState(groupIndex),\n          children: \"Toggle State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), group.teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: team.joukkue_nimi\n        }, team.joukkue_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))]\n      }, groupIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompetitionFetch, {\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitionAlkuerä, \"YfUpPvSH7jznLMkOb/TSG7KY0wQ=\");\n_c = CompetitionAlkuerä;\nexport default CompetitionAlkuerä;\nvar _c;\n$RefreshReg$(_c, \"CompetitionAlkuer\\xE4\");","map":{"version":3,"names":["React","useState","useEffect","CompetitionFetch","classNames","jsxDEV","_jsxDEV","CompetitionAlkuerä","_s","teams","setTeams","groupedTeams","setGroupedTeams","groupStates","setGroupStates","handleDataFetched","data","sortedTeams","sort","a","b","osallistumis_nro","first36Teams","slice","divideTeamsIntoGroups","grouped","reduce","result","team","index","groupIndex","Math","floor","name","state","push","map","toggleGroupState","prevGroupStates","updatedStates","children","fileName","_jsxFileName","lineNumber","columnNumber","className","group","toLowerCase","onClick","joukkue_nimi","joukkue_id","onDataFetched","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/CompetitionAlkuerä.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CompetitionFetch from './CompetitionFetch';\r\nimport classNames from 'classnames'; // Import the classNames library\r\nimport '../css/CompetitionAlkuerä.css';\r\n\r\nfunction CompetitionAlkuerä() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [groupedTeams, setGroupedTeams] = useState([]);\r\n  \r\n  // State to track the state (aloitus or lopetus) of each group\r\n  const [groupStates, setGroupStates] = useState([]);\r\n\r\n  const handleDataFetched = (data) => {\r\n    const sortedTeams = [...data].sort((a, b) => a.osallistumis_nro - b.osallistumis_nro);\r\n    const first36Teams = sortedTeams.slice(0, 36);\r\n    setTeams(first36Teams);\r\n    divideTeamsIntoGroups(first36Teams);\r\n  };\r\n\r\n  const divideTeamsIntoGroups = (teams) => {\r\n    const grouped = teams.reduce((result, team, index) => {\r\n      const groupIndex = Math.floor(index / 6);\r\n      if (!result[groupIndex]) {\r\n        result[groupIndex] = {\r\n          name: `Alkuerä ${groupIndex + 1}`,\r\n          teams: [],\r\n          state: 'aloitus', // Initialize the state to 'aloitus'\r\n        };\r\n      }\r\n      result[groupIndex].teams.push(team);\r\n      return result;\r\n    }, []);\r\n\r\n    setGroupStates(grouped.map(() => 'aloitus')); // Initialize group states\r\n    setGroupedTeams(grouped);\r\n  };\r\n\r\n  // Function to toggle the state of a group\r\n  const toggleGroupState = (groupIndex) => {\r\n    setGroupStates((prevGroupStates) => {\r\n      const updatedStates = [...prevGroupStates];\r\n      updatedStates[groupIndex] = prevGroupStates[groupIndex] === 'aloitus' ? 'lopetus' : 'aloitus';\r\n      return updatedStates;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // ...\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition Alkuerä</h1>\r\n      <div className=\"groups-container\">\r\n        {groupedTeams.map((group, groupIndex) => (\r\n          <div\r\n            key={groupIndex}\r\n            className={classNames('group', groupStates[groupIndex].toLowerCase())} // Apply class based on state\r\n          >\r\n            <h2>{group.name}</h2>\r\n            <button onClick={() => toggleGroupState(groupIndex)}>\r\n              Toggle State\r\n            </button>\r\n            {group.teams.map((team) => (\r\n              <div key={team.joukkue_id} className=\"team\">\r\n                {team.joukkue_nimi}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CompetitionFetch onDataFetched={handleDataFetched} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompetitionAlkuerä;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,YAAY,CAAC,CAAC;AACrC,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,iBAAiB,GAAIC,IAAI,IAAK;IAClC,MAAMC,WAAW,GAAG,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,gBAAgB,GAAGD,CAAC,CAACC,gBAAgB,CAAC;IACrF,MAAMC,YAAY,GAAGL,WAAW,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC7Cb,QAAQ,CAACY,YAAY,CAAC;IACtBE,qBAAqB,CAACF,YAAY,CAAC;EACrC,CAAC;EAED,MAAME,qBAAqB,GAAIf,KAAK,IAAK;IACvC,MAAMgB,OAAO,GAAGhB,KAAK,CAACiB,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;MACpD,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;MACxC,IAAI,CAACF,MAAM,CAACG,UAAU,CAAC,EAAE;QACvBH,MAAM,CAACG,UAAU,CAAC,GAAG;UACnBG,IAAI,EAAG,WAAUH,UAAU,GAAG,CAAE,EAAC;UACjCrB,KAAK,EAAE,EAAE;UACTyB,KAAK,EAAE,SAAS,CAAE;QACpB,CAAC;MACH;;MACAP,MAAM,CAACG,UAAU,CAAC,CAACrB,KAAK,CAAC0B,IAAI,CAACP,IAAI,CAAC;MACnC,OAAOD,MAAM;IACf,CAAC,EAAE,EAAE,CAAC;IAENb,cAAc,CAACW,OAAO,CAACW,GAAG,CAAC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC;IAC9CxB,eAAe,CAACa,OAAO,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMY,gBAAgB,GAAIP,UAAU,IAAK;IACvChB,cAAc,CAAEwB,eAAe,IAAK;MAClC,MAAMC,aAAa,GAAG,CAAC,GAAGD,eAAe,CAAC;MAC1CC,aAAa,CAACT,UAAU,CAAC,GAAGQ,eAAe,CAACR,UAAU,CAAC,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;MAC7F,OAAOS,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEI,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtC,OAAA;MAAKuC,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAC9B7B,YAAY,CAACyB,GAAG,CAAC,CAACU,KAAK,EAAEhB,UAAU,kBAClCxB,OAAA;QAEEuC,SAAS,EAAEzC,UAAU,CAAC,OAAO,EAAES,WAAW,CAACiB,UAAU,CAAC,CAACiB,WAAW,CAAC,CAAC,CAAE,CAAC;QAAA;QAAAP,QAAA,gBAEvElC,OAAA;UAAAkC,QAAA,EAAKM,KAAK,CAACb;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBtC,OAAA;UAAQ0C,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACP,UAAU,CAAE;UAAAU,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRE,KAAK,CAACrC,KAAK,CAAC2B,GAAG,CAAER,IAAI,iBACpBtB,OAAA;UAA2BuC,SAAS,EAAC,MAAM;UAAAL,QAAA,EACxCZ,IAAI,CAACqB;QAAY,GADVrB,IAAI,CAACsB,UAAU;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACN,CAAC;MAAA,GAXGd,UAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtC,OAAA,CAACH,gBAAgB;MAACgD,aAAa,EAAEpC;IAAkB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACpC,EAAA,CArEQD,kBAAkB;AAAA6C,EAAA,GAAlB7C,kBAAkB;AAuE3B,eAAeA,kBAAkB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}