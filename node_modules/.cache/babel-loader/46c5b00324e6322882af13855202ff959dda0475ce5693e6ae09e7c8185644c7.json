{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Competition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport '../css/Competition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Competition() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [finishedTimes, setFinishedTimes] = useState({});\n  const [updatedGroupData, setUpdatedGroupData] = useState(null);\n  useEffect(() => {\n    const socket = io('http://localhost:8000');\n    socket.on('selectedGroupUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\n    });\n    socket.on('groupDataUpdate', updatedGroupData => {\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\n    });\n    socket.on('finishedTimeUpdate', finishedTimes => {\n      console.log('Received finished time update:', finishedTimes);\n      setFinishedTimes(finishedTimes);\n      localStorage.setItem('finishedTimes', JSON.stringify(finishedTimes));\n      console.log('Updated finishedTimes:', finishedTimes);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n      setUpdatedGroupData(parsedData);\n    }\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const storedFinishedTimes = localStorage.getItem('finishedTimes');\n    if (storedFinishedTimes) {\n      const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\n      setFinishedTimes(parsedFinishedTimes);\n      console.log('Parsed Finished Times:', parsedFinishedTimes);\n    }\n  }, []);\n  function formatTime(milliseconds) {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const remainingSeconds = totalSeconds % 60;\n    const hundredths = Math.floor(milliseconds % 1000 / 10);\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\n    return formattedTime;\n  }\n  function getCombinedTime(team) {\n    return Object.values(finishedTimes[team.joukkue_id] || {}).reduce((acc, tasks) => {\n      return acc + Object.values(tasks).reduce((taskAcc, task) => taskAcc + task.finishedTime, 0);\n    }, 0);\n  }\n  function getSortedTeamsByCombinedTime() {\n    const teamsWithCombinedTimes = updatedGroupData.teams.map(team => ({\n      team,\n      combinedTime: getCombinedTime(team)\n    })).filter(item => item.combinedTime > 0);\n    teamsWithCombinedTimes.sort((a, b) => a.combinedTime - b.combinedTime);\n    return teamsWithCombinedTimes.map((item, index) => ({\n      ...item.team,\n      rank: index + 1,\n      color: getRankColor(index + 1)\n    }));\n  }\n  function getRankColor(rank) {\n    if (rank === 1) {\n      return 'gold';\n    } else if (rank === 2) {\n      return 'silver';\n    } else if (rank === 3) {\n      return 'bronze';\n    } else {\n      return '';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Competition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), updatedGroupData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: updatedGroupData.groupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Tasks: \", updatedGroupData.selectedTasks.map(task => `${task.tehtävä_nimi} (${formatTime(task.max_aika * 1000)})`).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: updatedGroupData.teams.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getRankColor(getSortedTeamsByCombinedTime().findIndex(t => t.joukkue_id === team.joukkue_id) + 1),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: team.joukkue_nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Members: \", team.jäsenet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasks-row\",\n            children: updatedGroupData.selectedTasks.map(selectedTask => {\n              var _finishedTimes$team$j, _finishedTimes$team$j2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: selectedTask.tehtävä_nimi\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 11\n                }, this), Object.entries(((_finishedTimes$team$j = finishedTimes[team.joukkue_id]) === null || _finishedTimes$team$j === void 0 ? void 0 : (_finishedTimes$team$j2 = _finishedTimes$team$j[updatedGroupData.groupInfo]) === null || _finishedTimes$team$j2 === void 0 ? void 0 : _finishedTimes$team$j2[selectedTask.tehtävä_nimi]) || {}).map(([taskName, finishedTimeData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Finished Time: \", formatTime(finishedTimeData.finishedTime * 10)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 15\n                  }, this)\n                }, taskName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 13\n                }, this))]\n              }, selectedTask.tehtävä_nimi, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Combined Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatTime(getCombinedTime(team) * 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 5\n          }, this)]\n        }, team.joukkue_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 3\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No selected group available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Competition, \"2Cjw4fJiUqIyV0ZzrHaJmYG7b/U=\");\n_c = Competition;\nexport default Competition;\nvar _c;\n$RefreshReg$(_c, \"Competition\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Competition","_s","selectedGroup","setSelectedGroup","finishedTimes","setFinishedTimes","updatedGroupData","setUpdatedGroupData","socket","on","parsedData","JSON","parse","localStorage","setItem","stringify","console","log","storedSelectedGroup","getItem","connected","disconnect","storedFinishedTimes","parsedFinishedTimes","formatTime","milliseconds","totalSeconds","Math","floor","minutes","remainingSeconds","hundredths","formattedTime","String","padStart","getCombinedTime","team","Object","values","joukkue_id","reduce","acc","tasks","taskAcc","task","finishedTime","getSortedTeamsByCombinedTime","teamsWithCombinedTimes","teams","map","combinedTime","filter","item","sort","a","b","index","rank","color","getRankColor","children","fileName","_jsxFileName","lineNumber","columnNumber","groupInfo","selectedTasks","tehtävä_nimi","max_aika","join","className","findIndex","t","joukkue_nimi","jäsenet","selectedTask","_finishedTimes$team$j","_finishedTimes$team$j2","entries","taskName","finishedTimeData","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Competition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport '../css/Competition.css';\r\n\r\nfunction Competition() {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [finishedTimes, setFinishedTimes] = useState({});\r\n  const [updatedGroupData, setUpdatedGroupData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:8000');\r\n\r\n    socket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\r\n    });\r\n\r\n    socket.on('groupDataUpdate', (updatedGroupData) => {\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n      localStorage.setItem('selectedGroup', JSON.stringify(parsedData));\r\n    });\r\n\r\n    socket.on('finishedTimeUpdate', (finishedTimes) => {\r\n      console.log('Received finished time update:', finishedTimes);\r\n\r\n      setFinishedTimes(finishedTimes);\r\n\r\n      localStorage.setItem('finishedTimes', JSON.stringify(finishedTimes));\r\n\r\n      console.log('Updated finishedTimes:', finishedTimes);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n      setUpdatedGroupData(parsedData);\r\n    }\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedFinishedTimes = localStorage.getItem('finishedTimes');\r\n    if (storedFinishedTimes) {\r\n      const parsedFinishedTimes = JSON.parse(storedFinishedTimes);\r\n      setFinishedTimes(parsedFinishedTimes);\r\n      console.log('Parsed Finished Times:', parsedFinishedTimes);\r\n    }\r\n  }, []);\r\n\r\n  function formatTime(milliseconds) {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const remainingSeconds = totalSeconds % 60;\r\n    const hundredths = Math.floor((milliseconds % 1000) / 10);\r\n\r\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}:${String(hundredths).padStart(2, '0')}`;\r\n    return formattedTime;\r\n  }\r\n\r\n  function getCombinedTime(team) {\r\n    return Object.values(finishedTimes[team.joukkue_id] || {}).reduce((acc, tasks) => {\r\n      return acc + Object.values(tasks).reduce((taskAcc, task) => taskAcc + task.finishedTime, 0);\r\n    }, 0);\r\n  }\r\n\r\n  function getSortedTeamsByCombinedTime() {\r\n    const teamsWithCombinedTimes = updatedGroupData.teams\r\n      .map((team) => ({\r\n        team,\r\n        combinedTime: getCombinedTime(team),\r\n      }))\r\n      .filter((item) => item.combinedTime > 0);\r\n  \r\n    teamsWithCombinedTimes.sort((a, b) => a.combinedTime - b.combinedTime);\r\n  \r\n    return teamsWithCombinedTimes.map((item, index) => ({\r\n      ...item.team,\r\n      rank: index + 1,\r\n      color: getRankColor(index + 1),\r\n    }));\r\n  }\r\n  \r\n  function getRankColor(rank) {\r\n    if (rank === 1) {\r\n      return 'gold';\r\n    } else if (rank === 2) {\r\n      return 'silver';\r\n    } else if (rank === 3) {\r\n      return 'bronze';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Competition</h1>\r\n      {updatedGroupData ? (\r\n        <div>\r\n          <h2>{updatedGroupData.groupInfo}</h2>\r\n          <h3>Selected Tasks: {updatedGroupData.selectedTasks.map((task) => `${task.tehtävä_nimi} (${formatTime(task.max_aika * 1000)})`).join(', ')}</h3>\r\n          <ul>\r\n{updatedGroupData.teams.map((team) => (\r\n  <div key={team.joukkue_id} className={getRankColor(getSortedTeamsByCombinedTime().findIndex(t => t.joukkue_id === team.joukkue_id) + 1)}>\r\n    <h3>{team.joukkue_nimi}</h3>\r\n    <p>Members: {team.jäsenet}</p>\r\n\r\n    <div className=\"tasks-row\">\r\n      {updatedGroupData.selectedTasks.map((selectedTask) => (\r\n        <div key={selectedTask.tehtävä_nimi} className=\"task\">\r\n          <h4>{selectedTask.tehtävä_nimi}</h4>\r\n          {Object.entries(finishedTimes[team.joukkue_id]?.[updatedGroupData.groupInfo]?.[selectedTask.tehtävä_nimi] || {}).map(([taskName, finishedTimeData]) => (\r\n            <div key={taskName}>\r\n              <p>Finished Time: {formatTime(finishedTimeData.finishedTime * 10)}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n    <div>\r\n      <h4>Combined Time</h4>\r\n      <p>{formatTime(getCombinedTime(team) * 10)}</p>\r\n    </div>\r\n  </div>\r\n))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No selected group available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Competition;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}