{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\NewAjastinGranChild.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewAjastinGranChild = () => {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    setSocket(newSocket);\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {}, task.tehtävä_nimi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(NewAjastinGranChild, \"RRFl5cq5dlO1oGquxO/0ypv+9V8=\", true);\n_c = NewAjastinGranChild;\nexport default NewAjastinGranChild;\nvar _c;\n$RefreshReg$(_c, \"NewAjastinGranChild\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NewAjastinGranChild","_s","teamId","useParams","selectedGroup","setSelectedGroup","useState","socket","setSocket","useEffect","document","title","newSocket","io","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTasks","map","task","tehtävä_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/NewAjastinGranChild.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst NewAjastinGranChild = () => {\r\n\r\n    const { teamId } = useParams();\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n    const [socket, setSocket] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      document.title = `Team ${teamId}`;\r\n      const newSocket = io('http://localhost:8000');\r\n  \r\n      newSocket.on('connect', () => {\r\n        console.log('WebSocket connection is open.');\r\n      });\r\n  \r\n      newSocket.on('disconnect', () => {\r\n        console.log('WebSocket connection is closed.');\r\n      });\r\n  \r\n      newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n        console.log('Received updated group data:', updatedGroupData);\r\n        const parsedData = JSON.parse(updatedGroupData);\r\n        setSelectedGroup(parsedData);\r\n  \r\n        localStorage.setItem('selectedGroup', updatedGroupData);\r\n      });\r\n  \r\n      const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n      if (storedSelectedGroup) {\r\n        const parsedData = JSON.parse(storedSelectedGroup);\r\n        setSelectedGroup(parsedData);\r\n      }\r\n  \r\n      setSocket(newSocket);\r\n  \r\n      return () => {\r\n        if (newSocket.connected) {\r\n          newSocket.disconnect();\r\n        }\r\n      };\r\n    }, [teamId]);\r\n  \r\n    return (\r\n      <div>\r\n        <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n        {selectedGroup && (\r\n          <div>\r\n            <h3>Selected Tasks:</h3>\r\n            <ul>\r\n              {selectedGroup.selectedTasks.map((task) => (\r\n                <li key={task.tehtävä_nimi}>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default NewAjastinGranChild;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM;IAAEC;EAAO,CAAC,GAAGC,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAE1CG,SAAS,CAAC,MAAM;IACdC,QAAQ,CAACC,KAAK,GAAI,QAAOT,MAAO,EAAC;IACjC,MAAMU,SAAS,GAAGC,EAAE,CAAC,uBAAuB,CAAC;IAE7CD,SAAS,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;IAEFJ,SAAS,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC;IAEFJ,SAAS,CAACE,EAAE,CAAC,qBAAqB,EAAGG,gBAAgB,IAAK;MACxDF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,gBAAgB,CAAC;MAC7D,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,gBAAgB,CAAC;MAC/CZ,gBAAgB,CAACa,UAAU,CAAC;MAE5BG,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEL,gBAAgB,CAAC;IACzD,CAAC,CAAC;IAEF,MAAMM,mBAAmB,GAAGF,YAAY,CAACG,OAAO,CAAC,eAAe,CAAC;IACjE,IAAID,mBAAmB,EAAE;MACvB,MAAML,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACG,mBAAmB,CAAC;MAClDlB,gBAAgB,CAACa,UAAU,CAAC;IAC9B;IAEAV,SAAS,CAACI,SAAS,CAAC;IAEpB,OAAO,MAAM;MACX,IAAIA,SAAS,CAACa,SAAS,EAAE;QACvBb,SAAS,CAACc,UAAU,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAACxB,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAM,QAAOzB,MAAO;IAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpC3B,aAAa,iBACZL,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhC,OAAA;QAAA4B,QAAA,EACGvB,aAAa,CAAC4B,aAAa,CAACC,GAAG,CAAEC,IAAI,iBACpCnC,OAAA,WAASmC,IAAI,CAACC,YAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA9B,EAAA,CAzDGD,mBAAmB;AAAAoC,EAAA,GAAnBpC,mBAAmB;AA2DzB,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}