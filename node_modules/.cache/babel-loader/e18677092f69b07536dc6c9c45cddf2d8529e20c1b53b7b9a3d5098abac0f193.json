{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Ajastin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ajastin() {\n  _s();\n  var _elapsedTimes$selecte;\n  const {\n    teamId\n  } = useParams();\n  const [elapsedTimes, setElapsedTimes] = useState({});\n  const [isRunning, setIsRunning] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    document.title = `Team ${teamId}`;\n    const newSocket = io('http://localhost:8000');\n    newSocket.on('connect', () => {\n      console.log('WebSocket connection is open.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('WebSocket connection is closed.');\n    });\n    newSocket.on('selectedGroupUpdate', updatedGroupData => {\n      console.log('Received updated group data:', updatedGroupData);\n      const parsedData = JSON.parse(updatedGroupData);\n      setSelectedGroup(parsedData);\n      localStorage.setItem('selectedGroup', updatedGroupData);\n    });\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\n    if (storedSelectedGroup) {\n      const parsedData = JSON.parse(storedSelectedGroup);\n      setSelectedGroup(parsedData);\n    }\n    setSocket(newSocket);\n    return () => {\n      if (newSocket.connected) {\n        newSocket.disconnect();\n      }\n    };\n  }, [teamId]);\n  useEffect(() => {\n    const timers = {};\n    selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.selectedTaskNames.forEach(taskName => {\n      timers[taskName] = {\n        elapsedTime: 0,\n        intervalId: null\n      };\n    });\n    setElapsedTimes(timers);\n    return () => {\n      Object.values(timers).forEach(timer => clearInterval(timer.intervalId));\n    };\n  }, [selectedGroup]);\n  useEffect(() => {\n    Object.values(elapsedTimes).forEach(timer => {\n      if (isRunning) {\n        timer.intervalId = setInterval(() => {\n          setElapsedTimes(prevElapsedTimes => ({\n            ...prevElapsedTimes,\n            [timer.taskName]: {\n              ...prevElapsedTimes[timer.taskName],\n              elapsedTime: prevElapsedTimes[timer.taskName].elapsedTime + 1\n            }\n          }));\n        }, 10);\n      } else {\n        clearInterval(timer.intervalId);\n      }\n    });\n    return () => {\n      Object.values(elapsedTimes).forEach(timer => clearInterval(timer.intervalId));\n    };\n  }, [isRunning, elapsedTimes]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    const newElapsedTimes = {};\n    Object.keys(elapsedTimes).forEach(taskName => {\n      newElapsedTimes[taskName] = {\n        elapsedTime: 0,\n        intervalId: null\n      };\n    });\n    setElapsedTimes(newElapsedTimes);\n    setIsRunning(false);\n  };\n  const formatTime = timeInMilliseconds => {\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\n    const seconds = Math.floor(timeInMilliseconds % (60 * 100) / 100);\n    const milliseconds = timeInMilliseconds % 100;\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Team ${teamId} Stopwatch`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedGroup.selectedTaskNam.map((taskName, index) => {\n          var _selectedGroup$select;\n          const selectedTask = (_selectedGroup$select = selectedGroup.selectedTasks) === null || _selectedGroup$select === void 0 ? void 0 : _selectedGroup$select.find(task => task.teht채v채_nimi === taskName);\n          console.log(`Task Name: ${taskName}`);\n          console.log('Selected Task:', selectedTask);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [taskName, \": \", formatTime((selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.max_aika) * 100)]\n          }, `${taskName}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 5\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(((_elapsedTimes$selecte = elapsedTimes[selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.selectedTaskNames[0]]) === null || _elapsedTimes$selecte === void 0 ? void 0 : _elapsedTimes$selecte.elapsedTime) * 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Ajastin, \"XgX7UWWv1Uh4Lqjcom2oLdA2fNI=\", false, function () {\n  return [useParams];\n});\n_c = Ajastin;\nexport default Ajastin;\nvar _c;\n$RefreshReg$(_c, \"Ajastin\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","Ajastin","_s","_elapsedTimes$selecte","teamId","elapsedTimes","setElapsedTimes","isRunning","setIsRunning","selectedGroup","setSelectedGroup","socket","setSocket","document","title","newSocket","on","console","log","updatedGroupData","parsedData","JSON","parse","localStorage","setItem","storedSelectedGroup","getItem","connected","disconnect","timers","selectedTaskNames","forEach","taskName","elapsedTime","intervalId","Object","values","timer","clearInterval","setInterval","prevElapsedTimes","startTimer","stopTimer","resetTimer","newElapsedTimes","keys","formatTime","timeInMilliseconds","minutes","Math","floor","seconds","milliseconds","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTaskNam","map","index","_selectedGroup$select","selectedTask","selectedTasks","find","task","teht채v채_nimi","max_aika","className","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/Ajastin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction Ajastin() {\r\n  const { teamId } = useParams();\r\n  const [elapsedTimes, setElapsedTimes] = useState({});\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `Team ${teamId}`;\r\n    const newSocket = io('http://localhost:8000');\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('WebSocket connection is open.');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('WebSocket connection is closed.');\r\n    });\r\n\r\n    newSocket.on('selectedGroupUpdate', (updatedGroupData) => {\r\n      console.log('Received updated group data:', updatedGroupData);\r\n      const parsedData = JSON.parse(updatedGroupData);\r\n      setSelectedGroup(parsedData);\r\n\r\n      localStorage.setItem('selectedGroup', updatedGroupData);\r\n    });\r\n\r\n    const storedSelectedGroup = localStorage.getItem('selectedGroup');\r\n    if (storedSelectedGroup) {\r\n      const parsedData = JSON.parse(storedSelectedGroup);\r\n      setSelectedGroup(parsedData);\r\n    }\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      if (newSocket.connected) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [teamId]);\r\n\r\n  useEffect(() => {\r\n    const timers = {};\r\n    selectedGroup?.selectedTaskNames.forEach((taskName) => {\r\n      timers[taskName] = {\r\n        elapsedTime: 0,\r\n        intervalId: null,\r\n      };\r\n    });\r\n    setElapsedTimes(timers);\r\n\r\n    return () => {\r\n      Object.values(timers).forEach((timer) => clearInterval(timer.intervalId));\r\n    };\r\n  }, [selectedGroup]);\r\n\r\n  useEffect(() => {\r\n    Object.values(elapsedTimes).forEach((timer) => {\r\n      if (isRunning) {\r\n        timer.intervalId = setInterval(() => {\r\n          setElapsedTimes((prevElapsedTimes) => ({\r\n            ...prevElapsedTimes,\r\n            [timer.taskName]: {\r\n              ...prevElapsedTimes[timer.taskName],\r\n              elapsedTime: prevElapsedTimes[timer.taskName].elapsedTime + 1,\r\n            },\r\n          }));\r\n        }, 10);\r\n      } else {\r\n        clearInterval(timer.intervalId);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      Object.values(elapsedTimes).forEach((timer) => clearInterval(timer.intervalId));\r\n    };\r\n  }, [isRunning, elapsedTimes]);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    const newElapsedTimes = {};\r\n    Object.keys(elapsedTimes).forEach((taskName) => {\r\n      newElapsedTimes[taskName] = {\r\n        elapsedTime: 0,\r\n        intervalId: null,\r\n      };\r\n    });\r\n    setElapsedTimes(newElapsedTimes);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const formatTime = (timeInMilliseconds) => {\r\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\r\n    const seconds = Math.floor((timeInMilliseconds % (60 * 100)) / 100);\r\n    const milliseconds = timeInMilliseconds % 100;\r\n\r\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`Team ${teamId} Stopwatch`}</h2>\r\n      {selectedGroup && (\r\n        <div>\r\n          <h3>Selected Tasks:</h3>\r\n          <ul>\r\n          {selectedGroup.selectedTaskNam.map((taskName, index) => {\r\n  const selectedTask = selectedGroup.selectedTasks?.find(task => task.teht채v채_nimi === taskName);\r\n  console.log(`Task Name: ${taskName}`);\r\n  console.log('Selected Task:', selectedTask);\r\n\r\n  return (\r\n    <li key={`${taskName}-${index}`}>\r\n      {taskName}: {formatTime(selectedTask?.max_aika * 100)}\r\n    </li>\r\n  );\r\n})}\r\n\r\n\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <div className=\"timer\">\r\n        <span>{formatTime(elapsedTimes[selectedGroup?.selectedTaskNames[0]]?.elapsedTime * 10)}</span>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={startTimer}>Start</button>\r\n        <button onClick={stopTimer}>Stop</button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ajastin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}