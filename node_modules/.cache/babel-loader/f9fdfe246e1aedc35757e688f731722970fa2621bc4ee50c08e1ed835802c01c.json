{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\Er\\xE4Lopetus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EräLopetus = ({\n  eraName\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  useEffect(() => {\n    fetchTimes();\n  }, []);\n  const fetchTimes = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/aikataulu');\n      if (!response.ok) {\n        throw new Error('Failed to fetch times');\n      }\n      const data = await response.json();\n      setTimes(data);\n    } catch (error) {\n      console.error('Error fetching times:', error);\n    }\n  };\n  const DetermineAlkueräWinners = async data => {\n    const alkueräRecords = data.filter(record => record.era.includes(\"Alkuerä\"));\n    const groupedByNumber = alkueräRecords.reduce((groups, record) => {\n      const eraNumber = record.era.match(/\\d+/);\n      if (!groups[eraNumber]) {\n        groups[eraNumber] = [];\n      }\n      groups[eraNumber].push(record);\n      return groups;\n    }, {});\n    const winners = Object.values(groupedByNumber).map(group => {\n      return group.reduce((winner, record) => record.aika < winner.aika ? record : winner, group[0]);\n    });\n    winners.sort((a, b) => a.aika - b.aika);\n    const remainingParticipants = alkueräRecords.filter(record => !winners.includes(record));\n    const additionalWinners = remainingParticipants.sort((a, b) => a.aika - b.aika).slice(0, 6);\n    const winnersWithUpdatedSemifinalist = additionalWinners.map(async winner => {\n      winner.semifinalist = 1;\n\n      // Update the database with the new semifinalist value\n      await updateJoukkue(winner.joukkue_id, {\n        semifinalist: 1\n      });\n      return winner;\n    });\n\n    // Wait for all the updates to complete\n    const updatedWinners = await Promise.all(winnersWithUpdatedSemifinalist);\n    const alkueräWinners = [...winners, ...updatedWinners];\n    return alkueräWinners;\n  };\n  const handleLopetaEräClick = async () => {\n    await fetchTimes();\n    if (times && times.length > 0) {\n      const alkueräWinners = DetermineAlkueräWinners(times);\n      alert(`Lopetit erän '${eraName}' with winners: ${JSON.stringify(alkueräWinners)}`);\n    } else {\n      alert('No times available.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLopetaEräClick,\n      children: \"Lopeta er\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(EräLopetus, \"81bowZj0s+OEa3RiisSpRGrXe+U=\");\n_c = EräLopetus;\nexport default EräLopetus;\nvar _c;\n$RefreshReg$(_c, \"Er\\xE4Lopetus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EräLopetus","eraName","_s","times","setTimes","fetchTimes","response","fetch","ok","Error","data","json","error","console","DetermineAlkueräWinners","alkueräRecords","filter","record","era","includes","groupedByNumber","reduce","groups","eraNumber","match","push","winners","Object","values","map","group","winner","aika","sort","a","b","remainingParticipants","additionalWinners","slice","winnersWithUpdatedSemifinalist","semifinalist","updateJoukkue","joukkue_id","updatedWinners","Promise","all","alkueräWinners","handleLopetaEräClick","length","alert","JSON","stringify","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/EräLopetus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EräLopetus = ({ eraName }) => {\r\n  const [times, setTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTimes();\r\n  }, []);\r\n\r\n  const fetchTimes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/aikataulu');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch times');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTimes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching times:', error);\r\n    }\r\n  };\r\n\r\n  const DetermineAlkueräWinners = async (data) => {\r\n  const alkueräRecords = data.filter(record => record.era.includes(\"Alkuerä\"));\r\n\r\n  const groupedByNumber = alkueräRecords.reduce((groups, record) => {\r\n    const eraNumber = record.era.match(/\\d+/);\r\n\r\n    if (!groups[eraNumber]) {\r\n      groups[eraNumber] = [];\r\n    }\r\n\r\n    groups[eraNumber].push(record);\r\n    return groups;\r\n  }, {});\r\n\r\n  const winners = Object.values(groupedByNumber).map(group => {\r\n    return group.reduce((winner, record) => (record.aika < winner.aika ? record : winner), group[0]);\r\n  });\r\n\r\n  winners.sort((a, b) => a.aika - b.aika);\r\n\r\n  const remainingParticipants = alkueräRecords.filter(record => !winners.includes(record));\r\n  const additionalWinners = remainingParticipants\r\n    .sort((a, b) => a.aika - b.aika)\r\n    .slice(0, 6);\r\n\r\n  const winnersWithUpdatedSemifinalist = additionalWinners.map(async (winner) => {\r\n    winner.semifinalist = 1;\r\n\r\n    // Update the database with the new semifinalist value\r\n    await updateJoukkue(winner.joukkue_id, { semifinalist: 1 });\r\n\r\n    return winner;\r\n  });\r\n\r\n  // Wait for all the updates to complete\r\n  const updatedWinners = await Promise.all(winnersWithUpdatedSemifinalist);\r\n\r\n  const alkueräWinners = [...winners, ...updatedWinners];\r\n\r\n  return alkueräWinners;\r\n};\r\n\r\n  \r\n  const handleLopetaEräClick = async () => {\r\n    await fetchTimes();\r\n  \r\n    if (times && times.length > 0) {\r\n      const alkueräWinners = DetermineAlkueräWinners(times);\r\n      alert(`Lopetit erän '${eraName}' with winners: ${JSON.stringify(alkueräWinners)}`);\r\n    } else {\r\n      alert('No times available.');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <button onClick={handleLopetaEräClick}>Lopeta erä</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EräLopetus;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}