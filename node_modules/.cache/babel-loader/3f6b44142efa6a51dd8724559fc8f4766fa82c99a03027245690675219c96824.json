{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\TasksSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksSelector({\n  onSelectTasks\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTaskIds, setSelectedTaskIds] = useState(['', '', '']);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/tehtavat').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n    const storedSelectedTaskIds = localStorage.getItem('selectedTaskIds');\n    if (storedSelectedTaskIds) {\n      setSelectedTaskIds(JSON.parse(storedSelectedTaskIds));\n    }\n  }, []);\n  const handleTaskChange = (e, index) => {\n    const taskId = e.target.value;\n    const selectedTask = tasks.find(task => task.id === parseInt(taskId, 10));\n    if (selectedTask) {\n      const updatedTaskIds = [...selectedTaskIds];\n      updatedTaskIds[index] = taskId;\n      onSelectTasks(updatedTaskIds.map(id => tasks.find(task => task.id === parseInt(id, 10))));\n      setSelectedTaskIds(updatedTaskIds);\n      localStorage.setItem('selectedTaskIds', JSON.stringify(updatedTaskIds));\n    } else {\n      console.error('Invalid task selected:', taskId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedTaskIds.map((selectedTaskId, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTaskId,\n      onChange: e => handleTaskChange(e, index),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a task\"\n      }, \"default\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: task.id,\n        children: task.tehtävä_nimi\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksSelector, \"y324FsjAK7kPlXRBgAcAE6JMZuM=\");\n_c = TasksSelector;\nexport default TasksSelector;\nvar _c;\n$RefreshReg$(_c, \"TasksSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TasksSelector","onSelectTasks","_s","tasks","setTasks","selectedTaskIds","setSelectedTaskIds","get","then","response","data","catch","error","console","storedSelectedTaskIds","localStorage","getItem","JSON","parse","handleTaskChange","e","index","taskId","target","value","selectedTask","find","task","id","parseInt","updatedTaskIds","map","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTaskId","onChange","tehtävä_nimi","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/TasksSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TasksSelector({ onSelectTasks }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTaskIds, setSelectedTaskIds] = useState(['', '', '']);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/api/tehtavat')\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n\r\n    const storedSelectedTaskIds = localStorage.getItem('selectedTaskIds');\r\n    if (storedSelectedTaskIds) {\r\n      setSelectedTaskIds(JSON.parse(storedSelectedTaskIds));\r\n    }\r\n  }, []);\r\n\r\n  const handleTaskChange = (e, index) => {\r\n    const taskId = e.target.value;\r\n    const selectedTask = tasks.find((task) => task.id === parseInt(taskId, 10));\r\n\r\n    if (selectedTask) {\r\n      const updatedTaskIds = [...selectedTaskIds];\r\n      updatedTaskIds[index] = taskId;\r\n\r\n      onSelectTasks(updatedTaskIds.map((id) => tasks.find((task) => task.id === parseInt(id, 10))));\r\n\r\n      setSelectedTaskIds(updatedTaskIds);\r\n      localStorage.setItem('selectedTaskIds', JSON.stringify(updatedTaskIds));\r\n    } else {\r\n      console.error('Invalid task selected:', taskId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Selector</h2>\r\n      {selectedTaskIds.map((selectedTaskId, index) => (\r\n        <select key={index} value={selectedTaskId} onChange={(e) => handleTaskChange(e, index)}>\r\n          <option key=\"default\" value=\"\">\r\n            Select a task\r\n          </option>\r\n          {tasks.map((task) => (\r\n            <option key={task.id} value={task.id}>\r\n              {task.tehtävä_nimi}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}