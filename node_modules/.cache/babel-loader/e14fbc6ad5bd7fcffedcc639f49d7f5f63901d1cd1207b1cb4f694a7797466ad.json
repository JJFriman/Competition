{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kilpailu\\\\src\\\\Components\\\\AjastinKello.js\",\n  _s = $RefreshSig$();\n// AjastinKello.js\nimport React, { useState, useEffect } from 'react';\nimport socket from './socket'; // Import the socket instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AjastinKello = ({\n  teamId,\n  task\n}) => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalIdRef = React.useRef(null);\n  useEffect(() => {\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    if (isRunning) {\n      const intervalId = setInterval(() => {\n        setElapsedTime(prevElapsedTime => prevElapsedTime + 1);\n      }, 10);\n      intervalIdRef.current = intervalId;\n    } else {\n      clearInterval(intervalIdRef.current);\n\n      // If the timer is stopped, emit the finished time\n      const finishedTime = new Date().toISOString();\n      socket.emit('finishedTime', {\n        teamId,\n        taskName: task.tehtävä_nimi,\n        finishedTime\n      });\n    }\n    return () => {\n      clearInterval(intervalIdRef.current);\n    };\n  }, [isRunning, teamId, task.tehtävä_nimi]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    setElapsedTime(0);\n    clearInterval(intervalIdRef.current);\n    setIsRunning(false);\n  };\n  const formatTime = timeInMilliseconds => {\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\n    const seconds = Math.floor(timeInMilliseconds % (60 * 100) / 100);\n    const milliseconds = timeInMilliseconds % 100;\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.tehtävä_nimi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(elapsedTime * 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        disabled: isRunning,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        disabled: !isRunning,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AjastinKello, \"nnGTbcYB9CEf/jGK8ShcSV5Iqq0=\");\n_c = AjastinKello;\nexport default AjastinKello;\nvar _c;\n$RefreshReg$(_c, \"AjastinKello\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","AjastinKello","teamId","task","_s","elapsedTime","setElapsedTime","isRunning","setIsRunning","intervalIdRef","useRef","clearInterval","current","intervalId","setInterval","prevElapsedTime","finishedTime","Date","toISOString","emit","taskName","tehtävä_nimi","startTimer","stopTimer","resetTimer","formatTime","timeInMilliseconds","minutes","Math","floor","seconds","milliseconds","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/kilpailu/src/Components/AjastinKello.js"],"sourcesContent":["// AjastinKello.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport socket from './socket'; // Import the socket instance\r\n\r\nconst AjastinKello = ({ teamId, task }) => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalIdRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      const intervalId = setInterval(() => {\r\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1);\r\n      }, 10);\r\n\r\n      intervalIdRef.current = intervalId;\r\n    } else {\r\n      clearInterval(intervalIdRef.current);\r\n\r\n      // If the timer is stopped, emit the finished time\r\n      const finishedTime = new Date().toISOString();\r\n      socket.emit('finishedTime', {\r\n        teamId,\r\n        taskName: task.tehtävä_nimi,\r\n        finishedTime,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalIdRef.current);\r\n    };\r\n  }, [isRunning, teamId, task.tehtävä_nimi]);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setElapsedTime(0);\r\n    clearInterval(intervalIdRef.current);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const formatTime = (timeInMilliseconds) => {\r\n    const minutes = Math.floor(timeInMilliseconds / (60 * 100));\r\n    const seconds = Math.floor((timeInMilliseconds % (60 * 100)) / 100);\r\n    const milliseconds = timeInMilliseconds % 100;\r\n\r\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}:${milliseconds < 10 ? '0' : ''}${milliseconds}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>{task.tehtävä_nimi}</h3>\r\n      <div className=\"timer\">\r\n        <span>{formatTime(elapsedTime * 10)}</span>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={startTimer} disabled={isRunning}>\r\n          Start\r\n        </button>\r\n        <button onClick={stopTimer} disabled={!isRunning}>\r\n          Stop\r\n        </button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AjastinKello;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}